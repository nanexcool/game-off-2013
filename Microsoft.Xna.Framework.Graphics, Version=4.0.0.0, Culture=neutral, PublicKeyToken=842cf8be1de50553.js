/* Generated by JSIL v0.7.6 build 31911. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm04 = JSIL.DeclareAssembly("Microsoft.Xna.Framework.Graphics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Xna");
JSIL.DeclareNamespace("Microsoft.Xna.Framework");
JSIL.DeclareNamespace("Microsoft.Xna.Framework.Graphics");
(function ResourceData$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.ResourceData", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "ResourceName", $.String); 
    $.Field({Static:false, Public:true }, "pComPtr", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")])); 
    $.Field({Static:false, Public:true }, "ResourceTag", $.Object); 
    $.Field({Static:false, Public:true }, "ManagedObject", $asm06.TypeRef("System.WeakReference")); 
    $.Field({Static:false, Public:true }, "dwResourceManagementMode", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:true }, "CurrentRefCount", $.Int32); 
    $.Field({Static:false, Public:true }, "objectHandle", $.UInt64); 
    $.Field({Static:false, Public:true }, "isDisposed", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DeviceResourceManager$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DeviceResourceManager", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddTrackedObject", 
      new JSIL.MethodSignature(null, [
          $.Object, $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")]), 
          $asm06.TypeRef("System.UInt32"), $.UInt64, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.UInt64], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "FindResourceW", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$asm06.TypeRef("System.Converter`2", [$.Object, $asm06.TypeRef("System.IntPtr")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCachedName", 
      new JSIL.MethodSignature($.String, [$.UInt64], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCachedObject", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetCachedTag", 
      new JSIL.MethodSignature($.Object, [$.UInt64], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "IncrementRefCount", 
      new JSIL.MethodSignature(null, [$.UInt64], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseAllDefaultPoolResources", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseAllDeviceResources", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseAllReferences", 
      new JSIL.MethodSignature(null, [$.UInt64, $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "ReleaseAutomaticResources", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetCachedName", 
      new JSIL.MethodSignature(null, [$.UInt64, $.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetCachedTag", 
      new JSIL.MethodSignature(null, [$.UInt64, $.Object], [])
    );

    $.Field({Static:false, Public:false}, "pResourceData", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.UInt64, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceData")])); 
    $.Field({Static:false, Public:false}, "pParentDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "pSyncObject", $.Object); 
    $.Field({Static:false, Public:false}, "_currentMaxHandle", $.UInt64); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function RenderTargetBinding$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.RenderTargetBinding", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetCube"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTarget2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CubeMapFace", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RenderTarget", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTarget2D")], [])
    );

    $.Field({Static:false, Public:false}, "_renderTarget", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")); 
    $.Field({Static:false, Public:false}, "_cubeMapFace", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace")); 
    $.Property({Static:false, Public:true }, "CubeMapFace", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"));

    $.Property({Static:false, Public:true }, "RenderTarget", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexBufferBinding$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.VertexBufferBinding", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InstanceFrequency", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexBuffer", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexOffset", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")], [])
    );

    $.Field({Static:false, Public:false}, "_vertexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")); 
    $.Field({Static:false, Public:false}, "_vertexOffset", $.Int32); 
    $.Field({Static:false, Public:false}, "_instanceFrequency", $.Int32); 
    $.Property({Static:false, Public:true }, "InstanceFrequency", $.Int32);

    $.Property({Static:false, Public:true }, "VertexOffset", $.Int32);

    $.Property({Static:false, Public:true }, "VertexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EmbeddedNativeType$l_D3DCAPS9$g$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.EmbeddedNativeType<_D3DCAPS9>", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exEmbeddedNativeType$l_D3DCAPS9$g", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tEmbeddedNativeType$l_D3DCAPS9$g", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function GraphicsDevice$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.GraphicsDevice", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exGraphicsDevice", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tGraphicsDevice", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DeviceLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DeviceReset", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DeviceResetting", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Disposing", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "add_DrawGuide", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_ResourceCreated", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_ResourceDestroyed", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "BeginUserPrimitives", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearBlendState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearDepthStencilState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearDirtyBuffers", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearRasterizerState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDevice", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateHelperClasses", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawIndexedPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawInstancedPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawUserIndexedPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Int32]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawUserIndexedPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Int16]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawUserIndexedPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Int32]), $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawUserIndexedPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Int16]), $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawUserPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawUserPrimitives", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "FireCreatedEvent", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "FireDestroyedEvent", 
      new JSIL.MethodSignature(null, [$.String, $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Adapter", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlendFactor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Color"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlendState", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendState"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DefaultClearOptions", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ClearOptions"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DepthStencilState", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthStencilState"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayMode", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GraphicsDeviceStatus", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GraphicsProfile", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Indices", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsDeviceLost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MultiSampleMask", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PresentationParameters", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RasterizerState", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RasterizerState"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReferenceStencil", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Resources", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeviceResourceManager"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SamplerStates", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerStateCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ScissorRectangle", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Textures", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexSamplerStates", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerStateCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexTextures", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Viewport", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Viewport"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBackBufferData", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBackBufferData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBackBufferData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetBufferUsage", 
      new JSIL.MethodSignature($asm06.TypeRef("System.UInt32"), [$asm06.TypeRef("System.UInt32")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetElementCountFromPrimitiveType", 
      new JSIL.MethodSignature($asm06.TypeRef("System.UInt32"), [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PrimitiveType"), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetRenderTargets", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetBinding")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetVertexBuffers", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBufferBinding")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDeviceState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Present", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), 
          $asm06.TypeRef("System.IntPtr")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Present", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_DeviceLost", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_DeviceReset", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_DeviceResetting", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_Disposing", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_DrawGuide", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_ResourceCreated", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_ResourceDestroyed", 
      new JSIL.MethodSignature(null, [$.Object, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DeviceLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DeviceReset", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DeviceResetting", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Disposing", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "remove_DrawGuide", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_ResourceCreated", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_ResourceDestroyed", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Reset", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Reset", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Reset", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResolveRenderTarget", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BlendFactor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Color")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BlendState", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendState")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DepthStencilState", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthStencilState")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Indices", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MultiSampleMask", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RasterizerState", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RasterizerState")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ReferenceStencil", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ScissorRectangle", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Viewport", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Viewport")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetRenderTarget", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetCube"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetRenderTarget", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTarget2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetRenderTargets", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetBinding")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetRenderTargets", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Pointer", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetBinding")]), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetVertexBuffer", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetVertexBuffer", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetVertexBuffers", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Pointer", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBufferBinding")]), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetVertexBuffers", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBufferBinding")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyCanDraw", 
      new JSIL.MethodSignature(null, [$.Boolean, $.Boolean], [])
    );

    $.Field({Static:false, Public:false}, "pSamplerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerStateCollection")); 
    $.Field({Static:false, Public:false}, "pVertexSamplerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerStateCollection")); 
    $.Field({Static:false, Public:false}, "pResourceManager", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeviceResourceManager")); 
    $.Field({Static:false, Public:false}, "pTextureCollection", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCollection")); 
    $.Field({Static:false, Public:false}, "pVertexTextureCollection", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCollection")); 
    $.Field({Static:false, Public:false}, "pCurrentAdapter", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter")); 
    $.Field({Static:false, Public:false}, "pInternalCachedParams", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")); 
    $.Field({Static:false, Public:false}, "pPublicCachedParams", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters")); 
    $.Field({Static:false, Public:false}, "pCreatedEventArgs", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs")); 
    $.Field({Static:false, Public:false}, "pDestroyedEventArgs", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs")); 
    $.Field({Static:false, Public:false}, "backing_store$DeviceResetting", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Field({Static:false, Public:false}, "backing_store$DeviceReset", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Field({Static:false, Public:false}, "backing_store$DeviceLost", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Field({Static:false, Public:false}, "backing_store$ResourceCreated", $asm06.TypeRef("System.EventHandler`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs")])); 
    $.Field({Static:false, Public:false}, "backing_store$ResourceDestroyed", $asm06.TypeRef("System.EventHandler`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs")])); 
    $.Field({Static:false, Public:false}, "cachedBlendState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendState")); 
    $.Field({Static:false, Public:false}, "cachedBlendFactor", $asm01.TypeRef("Microsoft.Xna.Framework.Color")); 
    $.Field({Static:false, Public:false}, "cachedMultiSampleMask", $.Int32); 
    $.Field({Static:false, Public:false}, "cachedDepthStencilState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthStencilState")); 
    $.Field({Static:false, Public:false}, "cachedReferenceStencil", $.Int32); 
    $.Field({Static:false, Public:false}, "cachedRasterizerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RasterizerState")); 
    $.Field({Static:false, Public:false}, "blendStateDirty", $.Boolean); 
    $.Field({Static:false, Public:false}, "depthStencilStateDirty", $.Boolean); 
    $.Field({Static:false, Public:false}, "lazyClearFlags", $.Int32); 
    $.Field({Static:false, Public:false}, "savedBackBufferClearFlags", $.Int32); 
    $.Field({Static:false, Public:false}, "currentViewport", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Viewport")); 
    $.Field({Static:false, Public:false}, "currentVertexBuffers", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBufferBinding")])); 
    $.Field({Static:false, Public:false}, "currentVertexBufferCount", $.Int32); 
    $.Field({Static:false, Public:false}, "instanceStreamMask", $.Int32); 
    $.Field({Static:false, Public:false}, "vertexDeclarationManager", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationManager")); 
    $.Field({Static:false, Public:false}, "_currentIB", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer")); 
    $.Field({Static:false, Public:false}, "activePass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass")); 
    $.Field({Static:false, Public:false}, "_insideScene", $.Boolean); 
    $.Field({Static:false, Public:false}, "_creationFlags", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "d3dCaps", $asm04.TypeRef("Microsoft.Xna.Framework.EmbeddedNativeType<_D3DCAPS9>")); 
    $.Field({Static:false, Public:false}, "_graphicsProfile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")); 
    $.Field({Static:false, Public:false}, "_profileCapabilities", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ProfileCapabilities")); 
    $.Field({Static:false, Public:false}, "_displayMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")); 
    $.Field({Static:false, Public:false}, "_parent", $.Type); 
    $.Field({Static:false, Public:false}, "currentRenderTargets", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetHelper")])); 
    $.Field({Static:false, Public:false}, "currentRenderTargetBindings", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetBinding")])); 
    $.Field({Static:false, Public:false}, "currentRenderTargetCount", $.Int32); 
    $.Field({Static:false, Public:false}, "willItBlend", $.Boolean); 
    $.Field({Static:false, Public:false}, "whyWontItBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean); 
    $.Field({Static:false, Public:false}, "backing_store$Disposing", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Field({Static:false, Public:false}, "_internalHandle", $.UInt64); 
    $.Field({Static:false, Public:false}, "spriteBeginCount", $.UInt16); 
    $.Field({Static:false, Public:false}, "spriteImmediateBeginCount", $.UInt16); 
    $.Field({Static:false, Public:false}, "_DrawGuideHandler", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:false, Public:false}, "DefaultClearOptions", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ClearOptions"));

    $.Property({Static:false, Public:false}, "IsDeviceLost", $.Boolean);

    $.Property({Static:false, Public:true }, "ScissorRectangle", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Property({Static:false, Public:true }, "Indices", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer"));

    $.Property({Static:false, Public:true }, "Viewport", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Viewport"));

    $.Property({Static:false, Public:true }, "DisplayMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode"));

    $.Property({Static:false, Public:true }, "GraphicsDeviceStatus", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus"));

    $.Property({Static:false, Public:true }, "GraphicsProfile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"));

    $.Property({Static:false, Public:true }, "Adapter", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter"));

    $.Property({Static:false, Public:true }, "PresentationParameters", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters"));

    $.Property({Static:false, Public:true }, "RasterizerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RasterizerState"));

    $.Property({Static:false, Public:true }, "ReferenceStencil", $.Int32);

    $.Property({Static:false, Public:true }, "DepthStencilState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthStencilState"));

    $.Property({Static:false, Public:true }, "MultiSampleMask", $.Int32);

    $.Property({Static:false, Public:true }, "BlendFactor", $asm01.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Property({Static:false, Public:true }, "BlendState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendState"));

    $.Property({Static:false, Public:true }, "VertexTextures", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCollection"));

    $.Property({Static:false, Public:true }, "Textures", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCollection"));

    $.Property({Static:false, Public:true }, "VertexSamplerStates", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerStateCollection"));

    $.Property({Static:false, Public:true }, "SamplerStates", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerStateCollection"));

    $.Property({Static:false, Public:false}, "Resources", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeviceResourceManager"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService", true, [], function ($) {
    $.Method({}, "get_GraphicsDevice", new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), [], []));
    $.Method({}, "add_DeviceCreated", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_DeviceCreated", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "add_DeviceResetting", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_DeviceResetting", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "add_DeviceReset", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_DeviceReset", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "add_DeviceDisposing", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_DeviceDisposing", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Property({}, "GraphicsDevice");
  }, []);

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IGraphicsResource", false, [], function ($) {
    $.Method({}, "ReleaseNativeObject", new JSIL.MethodSignature(null, [$.Boolean], []));
    $.Method({}, "SaveDataForRecreation", new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], []));
    $.Method({}, "RecreateAndPopulateObject", new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], []));
  }, []);

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource", false, [], function ($) {
    $.Method({}, "add_ContentLost", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "remove_ContentLost", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], []));
    $.Method({}, "get_IsContentLost", new JSIL.MethodSignature($.Boolean, [], []));
    $.Method({}, "SetContentLost", new JSIL.MethodSignature(null, [$.Boolean], []));
    $.Property({}, "IsContentLost");
  }, []);

(function GraphicsResource$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.GraphicsResource", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exGraphicsResource", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tGraphicsResource", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_Disposing", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GraphicsDevice", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Tag", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "raise_Disposing", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_Disposing", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Tag", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:false}, "_localName", $.String); 
    $.Field({Static:false, Public:false}, "_localTag", $.Object); 
    $.Field({Static:false, Public:false}, "_parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "_internalHandle", $.UInt64); 
    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean); 
    $.Field({Static:false, Public:false}, "backing_store$Disposing", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "GraphicsDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function BlendState$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.BlendState", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), 
          $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tBlendState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Apply", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AlphaBlendFunction", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AlphaDestinationBlend", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AlphaSourceBlend", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BlendFactor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Color"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorBlendFunction", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorDestinationBlend", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorSourceBlend", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorWriteChannels", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorWriteChannels1", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorWriteChannels2", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColorWriteChannels3", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MultiSampleMask", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AlphaBlendFunction", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AlphaDestinationBlend", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AlphaSourceBlend", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BlendFactor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Color")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorBlendFunction", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorDestinationBlend", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorSourceBlend", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorWriteChannels", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorWriteChannels1", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorWriteChannels2", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ColorWriteChannels3", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MultiSampleMask", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetDefaults", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfBound", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "cachedColorSourceBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")); 
    $.Field({Static:false, Public:false}, "cachedColorDestinationBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")); 
    $.Field({Static:false, Public:false}, "cachedColorBlendFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction")); 
    $.Field({Static:false, Public:false}, "cachedAlphaSourceBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")); 
    $.Field({Static:false, Public:false}, "cachedAlphaDestinationBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")); 
    $.Field({Static:false, Public:false}, "cachedAlphaBlendFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction")); 
    $.Field({Static:false, Public:false}, "cachedColorWriteChannels", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")); 
    $.Field({Static:false, Public:false}, "cachedColorWriteChannels1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")); 
    $.Field({Static:false, Public:false}, "cachedColorWriteChannels2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")); 
    $.Field({Static:false, Public:false}, "cachedColorWriteChannels3", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels")); 
    $.Field({Static:false, Public:false}, "cachedBlendFactor", $asm01.TypeRef("Microsoft.Xna.Framework.Color")); 
    $.Field({Static:false, Public:false}, "cachedMultiSampleMask", $.Int32); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Opaque", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "AlphaBlend", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Additive", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "NonPremultiplied", $.Type); 
    $.Field({Static:false, Public:false}, "isBound", $.Boolean); 
    $.Field({Static:false, Public:false}, "blendEnable", $.Boolean); 
    $.Field({Static:false, Public:false}, "separateAlphaBlend", $.Boolean); 
    $.Field({Static:false, Public:false}, "d3dBlendFactor", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "stateTrackerFlags", $asm06.TypeRef("System.UInt32")); 
    $.Property({Static:false, Public:true }, "MultiSampleMask", $.Int32);

    $.Property({Static:false, Public:true }, "BlendFactor", $asm01.TypeRef("Microsoft.Xna.Framework.Color"));

    $.Property({Static:false, Public:true }, "ColorWriteChannels3", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"));

    $.Property({Static:false, Public:true }, "ColorWriteChannels2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"));

    $.Property({Static:false, Public:true }, "ColorWriteChannels1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"));

    $.Property({Static:false, Public:true }, "ColorWriteChannels", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ColorWriteChannels"));

    $.Property({Static:false, Public:true }, "AlphaBlendFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction"));

    $.Property({Static:false, Public:true }, "AlphaDestinationBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"));

    $.Property({Static:false, Public:true }, "AlphaSourceBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"));

    $.Property({Static:false, Public:true }, "ColorBlendFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendFunction"));

    $.Property({Static:false, Public:true }, "ColorDestinationBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"));

    $.Property({Static:false, Public:true }, "ColorSourceBlend", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DepthStencilState$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.DepthStencilState", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.Boolean, 
          $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tDepthStencilState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Apply", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CounterClockwiseStencilDepthBufferFail", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CounterClockwiseStencilFail", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CounterClockwiseStencilFunction", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CounterClockwiseStencilPass", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DepthBufferEnable", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DepthBufferFunction", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DepthBufferWriteEnable", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReferenceStencil", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilDepthBufferFail", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilEnable", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilFail", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilFunction", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilMask", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilPass", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StencilWriteMask", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TwoSidedStencilMode", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CounterClockwiseStencilDepthBufferFail", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CounterClockwiseStencilFail", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CounterClockwiseStencilFunction", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CounterClockwiseStencilPass", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DepthBufferEnable", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DepthBufferFunction", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DepthBufferWriteEnable", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ReferenceStencil", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilDepthBufferFail", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilEnable", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilFail", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilFunction", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilMask", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilPass", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_StencilWriteMask", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TwoSidedStencilMode", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetDefaults", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfBound", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "cachedDepthBufferEnable", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedDepthBufferWriteEnable", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedDepthBufferFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")); 
    $.Field({Static:false, Public:false}, "cachedStencilEnable", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedStencilFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")); 
    $.Field({Static:false, Public:false}, "cachedStencilPass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")); 
    $.Field({Static:false, Public:false}, "cachedStencilFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")); 
    $.Field({Static:false, Public:false}, "cachedStencilDepthBufferFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")); 
    $.Field({Static:false, Public:false}, "cachedTwoSidedStencilMode", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedCounterClockwiseStencilFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")); 
    $.Field({Static:false, Public:false}, "cachedCounterClockwiseStencilPass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")); 
    $.Field({Static:false, Public:false}, "cachedCounterClockwiseStencilFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")); 
    $.Field({Static:false, Public:false}, "cachedCounterClockwiseStencilDepthBufferFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation")); 
    $.Field({Static:false, Public:false}, "cachedStencilMask", $.Int32); 
    $.Field({Static:false, Public:false}, "cachedStencilWriteMask", $.Int32); 
    $.Field({Static:false, Public:false}, "cachedReferenceStencil", $.Int32); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "None", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "Default", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "DepthRead", $.Type); 
    $.Field({Static:false, Public:false}, "isBound", $.Boolean); 
    $.Property({Static:false, Public:true }, "ReferenceStencil", $.Int32);

    $.Property({Static:false, Public:true }, "StencilWriteMask", $.Int32);

    $.Property({Static:false, Public:true }, "StencilMask", $.Int32);

    $.Property({Static:false, Public:true }, "CounterClockwiseStencilDepthBufferFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"));

    $.Property({Static:false, Public:true }, "CounterClockwiseStencilFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"));

    $.Property({Static:false, Public:true }, "CounterClockwiseStencilPass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"));

    $.Property({Static:false, Public:true }, "CounterClockwiseStencilFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"));

    $.Property({Static:false, Public:true }, "TwoSidedStencilMode", $.Boolean);

    $.Property({Static:false, Public:true }, "StencilDepthBufferFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"));

    $.Property({Static:false, Public:true }, "StencilFail", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"));

    $.Property({Static:false, Public:true }, "StencilPass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.StencilOperation"));

    $.Property({Static:false, Public:true }, "StencilFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"));

    $.Property({Static:false, Public:true }, "StencilEnable", $.Boolean);

    $.Property({Static:false, Public:true }, "DepthBufferFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"));

    $.Property({Static:false, Public:true }, "DepthBufferWriteEnable", $.Boolean);

    $.Property({Static:false, Public:true }, "DepthBufferEnable", $.Boolean);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectAnnotation$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectAnnotation", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_ColumnCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParameterClass", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterClass"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParameterType", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RowCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Semantic", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueBoolean", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueInt32", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueMatrix", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueSingle", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector2", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector3", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector4", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector4"), [], [])
    );

    $.Field({Static:false, Public:false}, "_handle", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.SByte")])); 
    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Field({Static:false, Public:false}, "_semantic", $.String); 
    $.Field({Static:false, Public:false}, "_rows", $.Int32); 
    $.Field({Static:false, Public:false}, "_columns", $.Int32); 
    $.Field({Static:false, Public:false}, "_paramClass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterClass")); 
    $.Field({Static:false, Public:false}, "_paramType", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterType")); 
    $.Property({Static:false, Public:true }, "ParameterType", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterType"));

    $.Property({Static:false, Public:true }, "ParameterClass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterClass"));

    $.Property({Static:false, Public:true }, "ColumnCount", $.Int32);

    $.Property({Static:false, Public:true }, "RowCount", $.Int32);

    $.Property({Static:false, Public:true }, "Semantic", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectAnnotationCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation"), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetBaseEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1/Enumerator", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetGenericEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation")]), [], [])
    )
      .Overrides(0, "GetEnumerator");

    $.Field({Static:false, Public:false}, "pAnnotation", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation")])); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation"));

    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation"));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotation")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function EffectPass$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectPass", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "Apply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndPass", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Annotations", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SyncEffectState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "pAnnotations", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection")); 
    $.Field({Static:false, Public:false}, "_technique", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")); 
    $.Field({Static:false, Public:false}, "_handle", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.SByte")])); 
    $.Field({Static:false, Public:false}, "_index", $.Int32); 
    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Field({Static:false, Public:false}, "_stateFlags", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectStateFlags")); 
    $.Field({Static:false, Public:false}, "_textureFlags", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "pVertexShaderCode", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.UInt32")])); 
    $.Field({Static:false, Public:false}, "pPixelShaderCode", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.UInt32")])); 
    $.Property({Static:false, Public:true }, "Annotations", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectPassCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectPassCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass"), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetBaseEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1/Enumerator", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetGenericEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass")]), [], [])
    )
      .Overrides(0, "GetEnumerator");

    $.Field({Static:false, Public:false}, "pPass", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass")])); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass"));

    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass"));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPass")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function EffectParameter$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectParameter", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_Annotations", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ColumnCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ElementCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Elements", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParameterClass", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterClass"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParameterType", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterType"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RowCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Semantic", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StructureMembers", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueBoolean", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueBooleanArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Boolean]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueInt32", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueInt32Array", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Int32]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueMatrix", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueMatrixArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueMatrixTranspose", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueMatrixTransposeArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueQuaternion", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Quaternion"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueQuaternionArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Quaternion")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueSingle", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueSingleArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Single]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueTexture2D", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueTexture3D", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture3D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueTextureCube", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector2", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector2Array", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector2")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector3", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector3Array", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector4", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector4"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueVector4Array", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector4")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SaveDataForRecreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetLastValue", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Quaternion")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Quaternion")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector4")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector4")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector2")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector2")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Single])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Int32])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Boolean])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValueTranspose", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValueTranspose", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.Field({Static:false, Public:false}, "pAnnotations", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection")); 
    $.Field({Static:false, Public:false}, "_parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "_handle", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.SByte")])); 
    $.Field({Static:false, Public:false}, "_index", $.Int32); 
    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Field({Static:false, Public:false}, "_semantic", $.String); 
    $.Field({Static:false, Public:false}, "_rows", $.Int32); 
    $.Field({Static:false, Public:false}, "_columns", $.Int32); 
    $.Field({Static:false, Public:false}, "_paramClass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterClass")); 
    $.Field({Static:false, Public:false}, "_paramType", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterType")); 
    $.Field({Static:false, Public:false}, "pParamCollection", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection")); 
    $.Field({Static:false, Public:false}, "pElementCollection", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection")); 
    $.Field({Static:false, Public:false}, "savedValue", $.Object); 
    $.Property({Static:false, Public:true }, "ParameterType", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterType"));

    $.Property({Static:false, Public:true }, "ParameterClass", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterClass"));

    $.Property({Static:false, Public:true }, "Elements", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection"));

    $.Property({Static:false, Public:true }, "StructureMembers", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection"));

    $.Property({Static:false, Public:true }, "ColumnCount", $.Int32);

    $.Property({Static:false, Public:true }, "RowCount", $.Int32);

    $.Property({Static:false, Public:true }, "Annotations", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection"));

    $.Property({Static:false, Public:true }, "Semantic", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:false}, "ElementCount", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectParameterCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectParameterCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetBaseEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1/Enumerator", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetGenericEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")]), [], [])
    )
      .Overrides(0, "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true }, "GetParameterBySemantic", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SaveDataForRecreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "_parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "pParameter", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")])); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"));

    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function EffectTechnique$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectTechnique", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_Annotations", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Passes", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPassCollection"), [], [])
    );

    $.Field({Static:false, Public:false}, "_parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "pPasses", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPassCollection")); 
    $.Field({Static:false, Public:false}, "pAnnotations", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection")); 
    $.Field({Static:false, Public:false}, "_handle", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.SByte")])); 
    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Property({Static:false, Public:true }, "Annotations", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectAnnotationCollection"));

    $.Property({Static:false, Public:true }, "Passes", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectPassCollection"));

    $.Property({Static:false, Public:true }, "Name", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectTechniqueCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetBaseEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1/Enumerator", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetGenericEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")]), [], [])
    )
      .Overrides(0, "GetEnumerator");

    $.ExternalMethod({Static:false, Public:false}, "GetTechniqueFromHandle", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"), [$jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.SByte")])], [])
    );

    $.Field({Static:false, Public:false}, "_parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "pTechniques", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")])); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"));

    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"));

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function Effect$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.Effect", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exEffect", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $jsilcore.TypeRef("System.Array", [$.Byte])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tEffect", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddClonedEffect", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateEffectFromCode", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $jsilcore.TypeRef("System.Array", [$.Byte])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "FormatShaderModel", 
      new JSIL.MethodSignature($.String, [$asm06.TypeRef("System.UInt32")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentTechnique", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parameters", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Techniques", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeHelpers", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnLostDevice", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnResetDevice", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:true }, "set_CurrentTechnique", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WantParameter", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.Field({Static:false, Public:false}, "pTechniqueCollection", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection")); 
    $.Field({Static:false, Public:false}, "pParamCollection", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection")); 
    $.Field({Static:false, Public:false}, "pCachedEffectData", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "pParentEffect", $asm06.TypeRef("System.WeakReference")); 
    $.Field({Static:false, Public:false}, "pClonedEffects", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.WeakReference")])); 
    $.Field({Static:false, Public:false}, "_currentTechnique", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique")); 
    $.Field({Static:true , Public:false}, "pSyncObject", $.Object); 
    $.Property({Static:false, Public:true }, "Parameters", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameterCollection"));

    $.Property({Static:false, Public:true }, "Techniques", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechniqueCollection"));

    $.Property({Static:false, Public:true }, "CurrentTechnique", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectTechnique"));

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Texture$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.Texture", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CompareTo", 
      new JSIL.MethodSignature($.Int32, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateStateWrapper", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Format", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LevelCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_MustClamp", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDescription", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsPowerOfTwo", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.UInt32")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "SwapBgr", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")]), $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")]), 
          $asm06.TypeRef("System.UInt32")
        ], [])
    );

    $.Field({Static:false, Public:false}, "_format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
    $.Field({Static:false, Public:false}, "_levelCount", $.Int32); 
    $.Field({Static:false, Public:false}, "alreadyRecreated", $.Boolean); 
    $.Field({Static:false, Public:false}, "isActiveRenderTarget", $.Boolean); 
    $.Field({Static:false, Public:false}, "renderTargetContentsDirty", $.Boolean); 
    $.Property({Static:false, Public:true }, "LevelCount", $.Int32);

    $.Property({Static:false, Public:true }, "Format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"));

    $.Property({Static:false, Public:false, Virtual:true }, "MustClamp", $.Boolean);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function TextureCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.TextureCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ResetState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")], [])
    );

    $.Field({Static:false, Public:false}, "_parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "_textureOffset", $.Int32); 
    $.Field({Static:false, Public:false}, "_maxTextures", $.Int32); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.EffectStateFlags", false, {
    None: 0, 
    Blend: 1, 
    DepthStencil: 2, 
    Rasterizer: 4, 
    Sampler0: 8, 
    Sampler1: 16, 
    Sampler2: 32, 
    Sampler3: 64, 
    Sampler4: 128, 
    Sampler5: 256, 
    Sampler6: 512, 
    Sampler7: 1024, 
    Sampler8: 2048, 
    Sampler9: 4096, 
    Sampler10: 8192, 
    Sampler11: 16384, 
    Sampler12: 32768, 
    Sampler13: 65536, 
    Sampler14: 131072, 
    Sampler15: 262144, 
    AllSamplers: 524280, 
    VertexSampler0: 524288, 
    VertexSampler1: 1048576, 
    VertexSampler2: 2097152, 
    VertexSampler3: 4194304, 
    AllVertexSamplers: 7864320
  }, true
);

(function Texture2D$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), "Microsoft.Xna.Framework.Graphics.Texture2D", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exTexture2D", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Boolean, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Boolean, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tTexture2D", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupSavedData", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), 
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32, $asm06.TypeRef("System.UInt32"), 
          $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyOrRestoreData", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "FromStream", 
      new JSIL.MethodSignature($.Type, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm06.TypeRef("System.IO.Stream"), 
          $.Int32, $.Int32, 
          $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromStream", 
      new JSIL.MethodSignature($.Type, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm06.TypeRef("System.IO.Stream")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bounds", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Height", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "get_MustClamp", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Width", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), 
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDataAsColor", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]), [$asm06.TypeRef("System.Converter`2", ["!!0", $asm01.TypeRef("Microsoft.Xna.Framework.Color")])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetDataAsColor", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]), [], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDescription", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Nullable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:true }, "SaveAsJpeg", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.Stream"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SaveAsPng", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.Stream"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), 
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateCreationParameters", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ProfileCapabilities"), $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $.Boolean
        ], [])
    );

    $.Field({Static:false, Public:false}, "_width", $.Int32); 
    $.Field({Static:false, Public:false}, "_height", $.Int32); 
    $.Field({Static:false, Public:false}, "_shouldNotRecreate", $.Boolean); 
    $.Field({Static:false, Public:false}, "pFaceData", $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.IntPtr")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "MustClamp", $.Boolean);

    $.Property({Static:false, Public:true }, "Bounds", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function TextureCube$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), "Microsoft.Xna.Framework.Graphics.TextureCube", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exTextureCube", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Boolean, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tTextureCube", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupSavedData", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyData", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $.Int32, 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $asm06.TypeRef("System.UInt32"), $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyOrRestoreData", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Size", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $.Int32, 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDescription", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Nullable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CubeMapFace"), $.Int32, 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateCreationParameters", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ProfileCapabilities"), $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.Field({Static:false, Public:false}, "_size", $.Int32); 
    $.Field({Static:false, Public:false}, "_shouldNotRecreate", $.Boolean); 
    $.Field({Static:false, Public:false}, "pFaceData", $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.IntPtr")])); 
    $.Property({Static:false, Public:true }, "Size", $.Int32);

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Texture3D$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), "Microsoft.Xna.Framework.Graphics.Texture3D", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exTexture3D", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Int32, 
          $.Boolean, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tTexture3D", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanupSavedData", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $asm06.TypeRef("System.UInt32"), $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyOrRestoreData", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateTexture", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Int32, 
          $.Boolean, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Depth", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Height", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Width", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDescription", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Nullable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.Field({Static:false, Public:false}, "_width", $.Int32); 
    $.Field({Static:false, Public:false}, "_height", $.Int32); 
    $.Field({Static:false, Public:false}, "_depth", $.Int32); 
    $.Field({Static:false, Public:false}, "pFaceData", $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.IntPtr")])); 
    $.Property({Static:false, Public:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SamplerState$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.SamplerState", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureFilter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"), 
          $.String
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tSamplerState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Apply", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AddressU", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AddressV", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AddressW", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Filter", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureFilter"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxAnisotropy", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxMipLevel", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MipMapLevelOfDetailBias", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AddressU", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AddressV", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AddressW", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Filter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureFilter")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxAnisotropy", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxMipLevel", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MipMapLevelOfDetailBias", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetDefaults", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfBound", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "cachedFilter", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureFilter")); 
    $.Field({Static:false, Public:false}, "cachedAddressU", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode")); 
    $.Field({Static:false, Public:false}, "cachedAddressV", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode")); 
    $.Field({Static:false, Public:false}, "cachedAddressW", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode")); 
    $.Field({Static:false, Public:false}, "cachedMaxAnisotropy", $.Int32); 
    $.Field({Static:false, Public:false}, "cachedMaxMipLevel", $.Int32); 
    $.Field({Static:false, Public:false}, "cachedMipMapLevelOfDetailBias", $.Single); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "PointWrap", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "PointClamp", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "LinearWrap", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "LinearClamp", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "AnisotropicWrap", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "AnisotropicClamp", $.Type); 
    $.Field({Static:false, Public:false}, "isBound", $.Boolean); 
    $.Field({Static:false, Public:false}, "filterMinFlag", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "filterMagFlag", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "filterMipFlag", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "nonClampAddressUFlag", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "nonClampAddressVFlag", $asm06.TypeRef("System.UInt32")); 
    $.Property({Static:false, Public:true }, "MipMapLevelOfDetailBias", $.Single);

    $.Property({Static:false, Public:true }, "MaxMipLevel", $.Int32);

    $.Property({Static:false, Public:true }, "MaxAnisotropy", $.Int32);

    $.Property({Static:false, Public:true }, "AddressW", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"));

    $.Property({Static:false, Public:true }, "AddressV", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"));

    $.Property({Static:false, Public:true }, "AddressU", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureAddressMode"));

    $.Property({Static:false, Public:true }, "Filter", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureFilter"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SamplerStateCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.SamplerStateCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearState", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState"), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeDeviceState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState")], [])
    );

    $.Field({Static:false, Public:false}, "pDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "pSamplerList", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState")])); 
    $.Field({Static:false, Public:false}, "samplerOffset", $.Int32); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function GraphicsAdapter$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.GraphicsAdapter", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.UInt32], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Adapters", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Type]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentDisplayMode", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode"), [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_DefaultAdapter", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Description", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DeviceId", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DeviceName", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDefaultAdapter", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsWideScreen", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MonitorHandle", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Revision", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SubSystemId", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SupportedDisplayModes", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayModeCollection"), [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_UseNullDevice", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_UseReferenceDevice", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VendorId", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitalizeGraphics", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeAdapterList", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsProfileSupported", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "QueryBackBufferFormat", 
      new JSIL.MethodSignature($.Boolean, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")]), $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "QueryRenderTargetFormat", 
      new JSIL.MethodSignature($.Boolean, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")]), $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "set_UseNullDevice", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "set_UseReferenceDevice", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.Field({Static:true , Public:false}, "pAdapterList", $asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Type])); 
    $.Field({Static:true , Public:false}, "pCleanupHelper", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsAdapter/CleanupHelper")); 
    $.Field({Static:false, Public:false}, "_currentDisplayMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")); 
    $.Field({Static:false, Public:false}, "_supportedDisplayModes", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayModeCollection")); 
    $.Field({Static:false, Public:false}, "_description", $.String); 
    $.Field({Static:false, Public:false}, "_deviceName", $.String); 
    $.Field({Static:false, Public:false}, "_vendorId", $.Int32); 
    $.Field({Static:false, Public:false}, "_deviceId", $.Int32); 
    $.Field({Static:false, Public:false}, "_subSystemId", $.Int32); 
    $.Field({Static:false, Public:false}, "_revision", $.Int32); 
    $.Field({Static:false, Public:false}, "adapter", $.UInt32); 
    $.Field({Static:true , Public:false}, "backing_store$UseNullDevice", $.Boolean); 
    $.Field({Static:true , Public:false}, "backing_store$UseReferenceDevice", $.Boolean); 
    $.Property({Static:true , Public:true }, "UseReferenceDevice", $.Boolean);

    $.Property({Static:true , Public:true }, "UseNullDevice", $.Boolean);

    $.Property({Static:false, Public:true }, "MonitorHandle", $asm06.TypeRef("System.IntPtr"));

    $.Property({Static:false, Public:true }, "SupportedDisplayModes", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayModeCollection"));

    $.Property({Static:false, Public:true }, "CurrentDisplayMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode"));

    $.Property({Static:false, Public:true }, "IsWideScreen", $.Boolean);

    $.Property({Static:false, Public:true }, "IsDefaultAdapter", $.Boolean);

    $.Property({Static:false, Public:true }, "Revision", $.Int32);

    $.Property({Static:false, Public:true }, "SubSystemId", $.Int32);

    $.Property({Static:false, Public:true }, "DeviceId", $.Int32);

    $.Property({Static:false, Public:true }, "VendorId", $.Int32);

    $.Property({Static:false, Public:true }, "DeviceName", $.String);

    $.Property({Static:false, Public:true }, "Description", $.String);

    $.Property({Static:true , Public:true }, "DefaultAdapter", $.Type);

    $.Property({Static:true , Public:true }, "Adapters", $asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Type]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function CleanupHelper$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.GraphicsAdapter/CleanupHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exCleanupHelper", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tCleanupHelper", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ProfileChecker$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.ProfileChecker", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function RasterizerState$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.RasterizerState", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CullMode"), $.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tRasterizerState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Apply", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_CullMode", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CullMode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DepthBias", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FillMode", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.FillMode"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MultiSampleAntiAlias", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ScissorTestEnable", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SlopeScaleDepthBias", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CullMode", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CullMode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DepthBias", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_FillMode", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.FillMode")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MultiSampleAntiAlias", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ScissorTestEnable", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SlopeScaleDepthBias", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetDefaults", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowIfBound", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "cachedCullMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CullMode")); 
    $.Field({Static:false, Public:false}, "cachedFillMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.FillMode")); 
    $.Field({Static:false, Public:false}, "cachedScissorTestEnable", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedMultiSampleAntiAlias", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedDepthBias", $.Single); 
    $.Field({Static:false, Public:false}, "cachedSlopeScaleDepthBias", $.Single); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "CullNone", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "CullClockwise", $.Type); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "CullCounterClockwise", $.Type); 
    $.Field({Static:false, Public:false}, "isBound", $.Boolean); 
    $.Property({Static:false, Public:true }, "SlopeScaleDepthBias", $.Single);

    $.Property({Static:false, Public:true }, "DepthBias", $.Single);

    $.Property({Static:false, Public:true }, "MultiSampleAntiAlias", $.Boolean);

    $.Property({Static:false, Public:true }, "ScissorTestEnable", $.Boolean);

    $.Property({Static:false, Public:true }, "FillMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.FillMode"));

    $.Property({Static:false, Public:true }, "CullMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CullMode"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexDeclaration$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.VertexDeclaration", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exVertexDeclaration", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tVertexDeclaration", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Bind", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "FromType", 
      new JSIL.MethodSignature($.Type, [$asm06.TypeRef("System.Type")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexStride", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetVertexElements", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Unbind", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "_elements", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])); 
    $.Field({Static:false, Public:false}, "_vertexStride", $.Int32); 
    $.Field({Static:false, Public:false}, "_binding", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding")); 
    $.Property({Static:false, Public:true }, "VertexStride", $.Int32);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DeclarationBinding$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DeclarationBinding", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    );

    $.Field({Static:false, Public:false}, "elements", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])); 
    $.Field({Static:false, Public:false}, "referenceCount", $.Int32); 
    $.Field({Static:false, Public:false}, "root", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding/BindingNode")); 
    $.Field({Static:false, Public:false}, "indirectOffspring", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding/BindingNode"), $.Boolean])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function BindingNode$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DeclarationBinding/BindingNode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddChild", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding"), $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetChild", 
      new JSIL.MethodSignature($.Type, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RecursiveRelease", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveChild", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding")], [])
    );

    $.Field({Static:false, Public:false}, "children", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding"), $.Type])])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DeclarationManager$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DeclarationManager", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ClearCurrent", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateBinding", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding"), [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateNativeDeclaration", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding/BindingNode")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")]), $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    )
      .Overrides(0, "Equals");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    )
      .Overrides(0, "GetHashCode");

    $.ExternalMethod({Static:false, Public:false}, "ReleaseAllDeclarations", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseBinding", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetNativeDeclaration", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetVertexDeclaration", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Pointer", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBufferBinding")]), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetVertexDeclaration", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")], [])
    );

    $.Field({Static:false, Public:false}, "device", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "bindings", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")]), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding")])); 
    $.Field({Static:false, Public:false}, "currentDeclarations", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DeclarationBinding")])); 
    $.Field({Static:false, Public:false}, "currentDeclarationCount", $.Int32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEqualityComparer`1", [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IVertexType", true, [], function ($) {
    $.Method({}, "get_VertexDeclaration", new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], []));
    $.Property({}, "VertexDeclaration");
  }, []);

(function VertexDeclarationFactory$b1$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.VertexDeclarationFactory`1", false, ["T"], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "get_VertexDeclaration", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], [])
    );

    $.Field({Static:true , Public:false}, "cachedDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")); 
    $.GenericProperty({Static:true , Public:true }, "VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexBuffer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.VertexBuffer", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exVertexBuffer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm06.TypeRef("System.Type"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tVertexBuffer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $.Int32, $asm06.TypeRef("System.UInt32"), 
          $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_BufferUsage", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsWriteOnly", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexDeclaration", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.Field({Static:false, Public:false}, "_usage", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_size", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_pool", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_vertexCount", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_vertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")); 
    $.Field({Static:false, Public:false}, "pBufferData", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")])); 
    $.Property({Static:false, Public:false}, "IsWriteOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"));

    $.Property({Static:false, Public:true }, "VertexCount", $.Int32);

    $.Property({Static:false, Public:true }, "BufferUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage"));

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DynamicVertexBuffer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), "Microsoft.Xna.Framework.Graphics.DynamicVertexBuffer", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm06.TypeRef("System.Type"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsContentLost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "raise_ContentLost", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetContentLost", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(3, "SetContentLost");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SetDataOptions")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SetDataOptions")
        ], ["T"])
    );

    $.Field({Static:false, Public:false}, "_contentLost", $.Boolean); 
    $.Field({Static:false, Public:false}, "backing_store$ContentLost", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsContentLost", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function IndexBuffer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.IndexBuffer", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exIndexBuffer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm06.TypeRef("System.Type"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexElementSize"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tIndexBuffer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CopyData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $asm06.TypeRef("System.UInt32"), $.Boolean
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_BufferUsage", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IndexCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IndexElementSize", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexElementSize"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsWriteOnly", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32
        ], ["T"])
    );

    $.Field({Static:false, Public:false}, "_usage", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_indexCount", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_indexSize", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_bufferSize", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "_pool", $asm06.TypeRef("System.UInt32")); 
    $.Field({Static:false, Public:false}, "pBufferData", $jsilcore.TypeRef("JSIL.Pointer", [$asm06.TypeRef("System.Void")])); 
    $.Property({Static:false, Public:false}, "IsWriteOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "IndexCount", $.Int32);

    $.Property({Static:false, Public:true }, "IndexElementSize", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexElementSize"));

    $.Property({Static:false, Public:true }, "BufferUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage"));

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DynamicIndexBuffer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer"), "Microsoft.Xna.Framework.Graphics.DynamicIndexBuffer", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm06.TypeRef("System.Type"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexElementSize"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BufferUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsContentLost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "raise_ContentLost", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetContentLost", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(3, "SetContentLost");

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", ["!!0"]), $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SetDataOptions")
        ], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetData", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", ["!!0"]), 
          $.Int32, $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SetDataOptions")
        ], ["T"])
    );

    $.Field({Static:false, Public:false}, "_contentLost", $.Boolean); 
    $.Field({Static:false, Public:false}, "backing_store$ContentLost", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsContentLost", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function RenderTargetHelper$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.RenderTargetHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exRenderTargetHelper", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource"), $.Int32, 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ProfileCapabilities")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tRenderTargetHelper", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateSurfaces", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "FromRenderTarget", 
      new JSIL.MethodSignature($.Type, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSharedDepthSurface", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$.Object], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsSameSize", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "pTexture", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource")); 
    $.Field({Static:false, Public:false}, "width", $.Int32); 
    $.Field({Static:false, Public:false}, "height", $.Int32); 
    $.Field({Static:false, Public:false}, "format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
    $.Field({Static:false, Public:false}, "depthFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")); 
    $.Field({Static:false, Public:false}, "multiSampleCount", $.Int32); 
    $.Field({Static:false, Public:false}, "usage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")); 
    $.Field({Static:false, Public:false}, "isCubemap", $.Boolean); 
    $.Field({Static:false, Public:false}, "pixelSize", $.Int32); 
    $.Field({Static:false, Public:false}, "willItBlend", $.Boolean); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function RenderTarget2D$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), "Microsoft.Xna.Framework.Graphics.RenderTarget2D", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Boolean, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Boolean, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tRenderTarget2D", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateRenderTarget", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Int32, $.Boolean, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), 
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DepthStencilFormat", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsContentLost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MultiSampleCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RenderTargetUsage", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "raise_ContentLost", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetContentLost", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(2, "SetContentLost");

    $.Field({Static:false, Public:false}, "helper", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetHelper")); 
    $.Field({Static:false, Public:false}, "_contentLost", $.Boolean); 
    $.Field({Static:false, Public:false}, "backing_store$ContentLost", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsContentLost", $.Boolean);

    $.Property({Static:false, Public:true }, "RenderTargetUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"));

    $.Property({Static:false, Public:true }, "MultiSampleCount", $.Int32);

    $.Property({Static:false, Public:true }, "DepthStencilFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"));

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function RenderTargetCube$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube"), "Microsoft.Xna.Framework.Graphics.RenderTargetCube", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Boolean, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Boolean, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tRenderTargetCube", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "add_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateRenderTarget", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Int32, 
          $.Boolean, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DepthStencilFormat", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsContentLost", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MultiSampleCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RenderTargetUsage", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "raise_ContentLost", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "remove_ContentLost", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetContentLost", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(2, "SetContentLost");

    $.Field({Static:false, Public:false}, "helper", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetHelper")); 
    $.Field({Static:false, Public:false}, "_contentLost", $.Boolean); 
    $.Field({Static:false, Public:false}, "backing_store$ContentLost", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsContentLost", $.Boolean);

    $.Property({Static:false, Public:true }, "RenderTargetUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"));

    $.Property({Static:false, Public:true }, "MultiSampleCount", $.Int32);

    $.Property({Static:false, Public:true }, "DepthStencilFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"));

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IDynamicGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function GuideRenderer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.GuideRenderer", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exGuideRenderer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.GamerServices.IGuideRendererProxySource")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tGuideRenderer", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DestroyResources", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DrawGuide", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GraphicsDeviceCreated", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GraphicsDeviceDisposing", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GraphicsDeviceReset", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GraphicsDeviceResetting", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReplayDrawingCommands", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IntPtr"), $.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetStandardRenderStates", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "proxySource", $asm01.TypeRef("Microsoft.Xna.Framework.GamerServices.IGuideRendererProxySource")); 
    $.Field({Static:false, Public:false}, "graphicsDeviceService", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsDeviceService")); 
    $.Field({Static:false, Public:false}, "graphicsDevice", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "deviceResetCount", $.Int32); 
    $.Field({Static:false, Public:false}, "resourceTable", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm06.TypeRef("System.IntPtr")])); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SavedDeviceState$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.SavedDeviceState", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Restore", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:false}, "device", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")); 
    $.Field({Static:false, Public:false}, "vertexBuffers", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBufferBinding")])); 
    $.Field({Static:false, Public:false}, "indices", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer")); 
    $.Field({Static:false, Public:false}, "textures", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")])); 
    $.Field({Static:false, Public:false}, "samplerStates", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState")])); 
    $.Field({Static:false, Public:false}, "vertexTextures", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")])); 
    $.Field({Static:false, Public:false}, "vertexSamplerStates", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState")])); 
    $.Field({Static:false, Public:false}, "blendState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendState")); 
    $.Field({Static:false, Public:false}, "blendFactor", $asm01.TypeRef("Microsoft.Xna.Framework.Color")); 
    $.Field({Static:false, Public:false}, "multiSampleMask", $.Int32); 
    $.Field({Static:false, Public:false}, "depthStencilState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthStencilState")); 
    $.Field({Static:false, Public:false}, "referenceStencil", $.Int32); 
    $.Field({Static:false, Public:false}, "rasterizerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RasterizerState")); 
    $.Field({Static:false, Public:false}, "viewport", $asm06.TypeRef("System.Nullable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Viewport")])); 
    $.Field({Static:false, Public:false}, "scissorRectangle", $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function OcclusionQuery$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.OcclusionQuery", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "$exOcclusionQuery", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "$tOcclusionQuery", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Attribute($asm06.TypeRef("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "End", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsComplete", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PixelCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnObjectCreation", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "RecreateAndPopulateObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "RecreateAndPopulateObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ReleaseNativeObject", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(1, "ReleaseNativeObject");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SaveDataForRecreation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [], [])
    )
      .Overrides(1, "SaveDataForRecreation");

    $.Field({Static:false, Public:false}, "_pixelCount", $.Int32); 
    $.Field({Static:false, Public:false}, "_isAvailable", $.Boolean); 
    $.Field({Static:false, Public:false}, "_isInBeginEndPair", $.Boolean); 
    $.Field({Static:false, Public:false}, "_hasCalledBegin", $.Boolean); 
    $.Field({Static:false, Public:false}, "_hasIsCompleteBeenQueried", $.Boolean); 
    $.Property({Static:false, Public:true }, "PixelCount", $.Int32);

    $.Property({Static:false, Public:true }, "IsComplete", $.Boolean);

    $.ImplementInterfaces(
      /* 1 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IGraphicsResource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("$lCrtImplementationDetails$g");
(function ModuleLoadException$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Exception"), "<CrtImplementationDetails>.ModuleLoadException", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.Constant({Static:true , Public:true }, "Nested", "A nested exception occurred after the primary exception that caused the C++ module to fail to load.\n"); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModuleLoadExceptionHandlerException$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("<CrtImplementationDetails>.ModuleLoadException"), "<CrtImplementationDetails>.ModuleLoadExceptionHandlerException", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm06.TypeRef("System.Exception"), 
          $asm06.TypeRef("System.Exception")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NestedException", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Exception"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_NestedException", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Constant({Static:true , Public:false}, "formatString", "\n{0}: {1}\n--- Start of primary exception ---\n{2}\n--- End of primary exception ---\n\n--- Start of nested exception ---\n{3}\n--- End of nested exception ---\n"); 
    $.Field({Static:false, Public:false}, "backing_store$NestedException", $asm06.TypeRef("System.Exception")); 
    $.Property({Static:false, Public:true }, "NestedException", $asm06.TypeRef("System.Exception"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModuleUninitializer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Collections.Stack"), "<CrtImplementationDetails>.ModuleUninitializer", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AddHandler", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.EventHandler")], [])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SingletonDomainUnload", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm06.TypeRef("System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute"));

    $.Field({Static:true , Public:false}, "lock", $.Object); 
    $.Field({Static:true , Public:false}, "_ModuleUninitializer", $.Type); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Model$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.Model", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyAbsoluteBoneTransformsTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyBoneTransformsFrom", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "CopyBoneTransformsTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bones", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Meshes", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Root", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Tag", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Read", 
      new JSIL.MethodSignature($.Type, [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadBoneReference", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadBones", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadMeshes", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadMeshParts", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")]), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Tag", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.Field({Static:false, Public:false}, "root", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")); 
    $.Field({Static:false, Public:false}, "bones", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection")); 
    $.Field({Static:false, Public:false}, "meshes", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshCollection")); 
    $.Field({Static:false, Public:false}, "tag", $.Object); 
    $.Field({Static:true , Public:false}, "sharedDrawBoneMatrices", $jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])); 
    $.Property({Static:false, Public:true }, "Root", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"));

    $.Property({Static:false, Public:true }, "Bones", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection"));

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    $.Property({Static:false, Public:true }, "Meshes", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function $l$gc__DisplayClass3$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.Model/<>c__DisplayClass3", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "meshParts", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

(function $l$gc__DisplayClass5$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.Model/<>c__DisplayClass5", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Field({Static:false, Public:true }, "$locals4", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Model/<>c__DisplayClass3")); 
    $.Field({Static:false, Public:true }, "uniqueCopyOfI", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

(function ModelBone$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.ModelBone", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), 
          $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Children", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Index", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Parent", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Transform", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Transform", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetParentAndChildren", 
      new JSIL.MethodSignature(null, [$.Type, $jsilcore.TypeRef("System.Array", [$.Type])], [])
    );

    $.Field({Static:false, Public:false}, "$name", $.String); 
    $.Field({Static:false, Public:false}, "transform", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "index", $.Int32); 
    $.Field({Static:false, Public:false}, "parent", $.Type); 
    $.Field({Static:false, Public:false}, "children", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection")); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Index", $.Int32);

    $.Property({Static:false, Public:true }, "Transform", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true }, "Parent", $.Type);

    $.Property({Static:false, Public:true }, "Children", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelBoneCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")]), "Microsoft.Xna.Framework.Graphics.ModelBoneCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBoneCollection/Enumerator"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")])], [])
    );

    $.Field({Static:false, Public:false}, "wrappedArray", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")])); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function Enumerator$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.ModelBoneCollection/Enumerator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(2, "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(2, "Reset");

    $.Field({Static:false, Public:false}, "wrappedArray", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")])); 
    $.Field({Static:false, Public:false}, "position", $.Int32); 
    $.Property({Static:false, Public:true , Virtual:true }, "Current", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")]), 
      /* 1 */ $asm06.TypeRef("System.IDisposable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelEffectCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")]), "Microsoft.Xna.Framework.Graphics.ModelEffectCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Add", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelEffectCollection/Enumerator"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Remove", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")], [])
    );

    $.Field({Static:false, Public:false}, "wrappedList", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")])); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Enumerator$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.ModelEffectCollection/Enumerator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(2, "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(2, "Reset");

    $.Field({Static:false, Public:false}, "internalEnumerator", $asm06.TypeRef("System.Collections.Generic.List`1/Enumerator", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "Current", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")]), 
      /* 1 */ $asm06.TypeRef("System.IDisposable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelMesh$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.ModelMesh", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.BoundingSphere"), $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")]), 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BoundingSphere", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.BoundingSphere"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Effects", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelEffectCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MeshParts", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ParentBone", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Tag", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Tag", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.Field({Static:false, Public:false}, "$name", $.String); 
    $.Field({Static:false, Public:false}, "parentBone", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone")); 
    $.Field({Static:false, Public:false}, "boundingSphere", $asm01.TypeRef("Microsoft.Xna.Framework.BoundingSphere")); 
    $.Field({Static:false, Public:false}, "meshParts", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection")); 
    $.Field({Static:false, Public:false}, "effects", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelEffectCollection")); 
    $.Field({Static:false, Public:false}, "tag", $.Object); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "ParentBone", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelBone"));

    $.Property({Static:false, Public:true }, "BoundingSphere", $asm01.TypeRef("Microsoft.Xna.Framework.BoundingSphere"));

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    $.Property({Static:false, Public:true }, "MeshParts", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection"));

    $.Property({Static:false, Public:true }, "Effects", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelEffectCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelMeshCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")]), "Microsoft.Xna.Framework.Graphics.ModelMeshCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshCollection/Enumerator"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")])], [])
    );

    $.Field({Static:false, Public:false}, "wrappedArray", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")])); 
    $.Property({Static:false, Public:true }, "Item", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function Enumerator$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.ModelMeshCollection/Enumerator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(2, "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(2, "Reset");

    $.Field({Static:false, Public:false}, "wrappedArray", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")])); 
    $.Field({Static:false, Public:false}, "position", $.Int32); 
    $.Property({Static:false, Public:true , Virtual:true }, "Current", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")]), 
      /* 1 */ $asm06.TypeRef("System.IDisposable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelMeshPart$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.ModelMeshPart", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Object
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Draw", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Effect", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IndexBuffer", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NumVertices", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PrimitiveCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StartIndex", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Tag", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexBuffer", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexOffset", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Effect", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Tag", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.Field({Static:false, Public:false}, "vertexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")); 
    $.Field({Static:false, Public:false}, "indexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer")); 
    $.Field({Static:false, Public:false}, "startIndex", $.Int32); 
    $.Field({Static:false, Public:false}, "primitiveCount", $.Int32); 
    $.Field({Static:false, Public:false}, "vertexOffset", $.Int32); 
    $.Field({Static:false, Public:false}, "numVertices", $.Int32); 
    $.Field({Static:false, Public:false}, "effect", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "tag", $.Object); 
    $.Field({Static:false, Public:false}, "parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMesh")); 
    $.Property({Static:false, Public:true }, "StartIndex", $.Int32);

    $.Property({Static:false, Public:true }, "PrimitiveCount", $.Int32);

    $.Property({Static:false, Public:true }, "VertexOffset", $.Int32);

    $.Property({Static:false, Public:true }, "NumVertices", $.Int32);

    $.Property({Static:false, Public:true }, "IndexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer"));

    $.Property({Static:false, Public:true }, "VertexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"));

    $.Property({Static:false, Public:true }, "Effect", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"));

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelMeshPartCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")]), "Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection/Enumerator"), [], [])
    );

    $.Field({Static:false, Public:false}, "wrappedArray", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")])); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Enumerator$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.ModelMeshPartCollection/Enumerator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")])], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      new JSIL.MethodSignature($.Object, [], [])
    )
      .Overrides(2, "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      new JSIL.MethodSignature(null, [], [])
    )
      .Overrides(2, "Reset");

    $.Field({Static:false, Public:false}, "wrappedArray", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")])); 
    $.Field({Static:false, Public:false}, "position", $.Int32); 
    $.Property({Static:false, Public:true , Virtual:true }, "Current", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ModelMeshPart")]), 
      /* 1 */ $asm06.TypeRef("System.IDisposable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft.Xna.Framework.Content");
(function BuiltInEffectReader$b1$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [new JSIL.GenericParameter("T", "Microsoft.Xna.Framework.Content.BuiltInEffectReader`1")]), "Microsoft.Xna.Framework.Content.BuiltInEffectReader`1", false, ["T"], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetClonedEffect", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("T", "Microsoft.Xna.Framework.Content.BuiltInEffectReader`1"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm06.TypeRef("System.Converter`2", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), new JSIL.GenericParameter("T", "Microsoft.Xna.Framework.Content.BuiltInEffectReader`1")])], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadTexture", 
      new JSIL.MethodSignature("!!0", [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], ["TextureType"])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveDevice", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")], [])
    );

    $.Field({Static:true , Public:false}, "sharedEffects", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), $.GenericParameter("T")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function BasicEffectReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Content.BuiltInEffectReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BasicEffect")]), "Microsoft.Xna.Framework.Content.BasicEffectReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BasicEffect"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BasicEffect")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SkinnedEffectReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Content.BuiltInEffectReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SkinnedEffect")]), "Microsoft.Xna.Framework.Content.SkinnedEffectReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SkinnedEffect"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SkinnedEffect")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EnvironmentMapEffectReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Content.BuiltInEffectReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect")]), "Microsoft.Xna.Framework.Content.EnvironmentMapEffectReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DualTextureEffectReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Content.BuiltInEffectReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DualTextureEffect")]), "Microsoft.Xna.Framework.Content.DualTextureEffectReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DualTextureEffect"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DualTextureEffect")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function AlphaTestEffectReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Content.BuiltInEffectReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.AlphaTestEffect")]), "Microsoft.Xna.Framework.Content.AlphaTestEffectReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.AlphaTestEffect"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.AlphaTestEffect")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectMaterialReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectMaterial")]), "Microsoft.Xna.Framework.Content.EffectMaterialReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsAVectorOrASingle", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectMaterial"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectMaterial")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryToSetParameter", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), $.String, 
          $.Object
        ], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")]), "Microsoft.Xna.Framework.Content.EffectReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function IndexBufferReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer")]), "Microsoft.Xna.Framework.Content.IndexBufferReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IndexBuffer")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ModelReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Model")]), "Microsoft.Xna.Framework.Content.ModelReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Model"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Model")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SpriteFontReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont")]), "Microsoft.Xna.Framework.Content.SpriteFontReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Texture2DReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")]), "Microsoft.Xna.Framework.Content.Texture2DReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Texture3DReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture3D")]), "Microsoft.Xna.Framework.Content.Texture3DReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture3D"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture3D")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function TextureCubeReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube")]), "Microsoft.Xna.Framework.Content.TextureCubeReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function TextureReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")]), "Microsoft.Xna.Framework.Content.TextureReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexBufferReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")]), "Microsoft.Xna.Framework.Content.VertexBufferReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexBuffer")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexDeclarationReader$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentTypeReader`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")]), "Microsoft.Xna.Framework.Content.VertexDeclarationReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Read", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EffectMaterial$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), "Microsoft.Xna.Framework.Graphics.EffectMaterial", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IEffectMatrices", true, [], function ($) {
    $.Method({}, "get_World", new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], []));
    $.Method({}, "set_World", new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], []));
    $.Method({}, "get_View", new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], []));
    $.Method({}, "set_View", new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], []));
    $.Method({}, "get_Projection", new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], []));
    $.Method({}, "set_Projection", new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], []));
    $.Property({}, "World");
    $.Property({}, "View");
    $.Property({}, "Projection");
  }, []);

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IEffectLights", true, [], function ($) {
    $.Method({}, "get_DirectionalLight0", new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], []));
    $.Method({}, "get_DirectionalLight1", new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], []));
    $.Method({}, "get_DirectionalLight2", new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], []));
    $.Method({}, "get_AmbientLightColor", new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], []));
    $.Method({}, "set_AmbientLightColor", new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], []));
    $.Method({}, "get_LightingEnabled", new JSIL.MethodSignature($.Boolean, [], []));
    $.Method({}, "set_LightingEnabled", new JSIL.MethodSignature(null, [$.Boolean], []));
    $.Method({}, "EnableDefaultLighting", new JSIL.MethodSignature(null, [], []));
    $.Property({}, "DirectionalLight0");
    $.Property({}, "DirectionalLight1");
    $.Property({}, "DirectionalLight2");
    $.Property({}, "AmbientLightColor");
    $.Property({}, "LightingEnabled");
  }, []);

JSIL.MakeInterface(
  "Microsoft.Xna.Framework.Graphics.IEffectFog", true, [], function ($) {
    $.Method({}, "get_FogEnabled", new JSIL.MethodSignature($.Boolean, [], []));
    $.Method({}, "set_FogEnabled", new JSIL.MethodSignature(null, [$.Boolean], []));
    $.Method({}, "get_FogStart", new JSIL.MethodSignature($.Single, [], []));
    $.Method({}, "set_FogStart", new JSIL.MethodSignature(null, [$.Single], []));
    $.Method({}, "get_FogEnd", new JSIL.MethodSignature($.Single, [], []));
    $.Method({}, "set_FogEnd", new JSIL.MethodSignature(null, [$.Single], []));
    $.Method({}, "get_FogColor", new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], []));
    $.Method({}, "set_FogColor", new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], []));
    $.Property({}, "FogEnabled");
    $.Property({}, "FogStart");
    $.Property({}, "FogEnd");
    $.Property({}, "FogColor");
  }, []);

(function SpriteFont$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.SpriteFont", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm06.TypeRef("System.Collections.Generic.List`1", [$.Char]), 
          $.Int32, $.Single, 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")]), $asm06.TypeRef("System.Nullable`1", [$.Char])
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Characters", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Char]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultCharacter", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Nullable`1", [$.Char]), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LineSpacing", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Spacing", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetIndexForCharacter", 
      new JSIL.MethodSignature($.Int32, [$.Char], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalDraw", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont/StringProxy")]), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector2")]), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalMeasure", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), [$jsilcore.TypeRef("JSIL.Reference", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont/StringProxy")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "MeasureString", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "MeasureStringBuilder", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), [$asm06.TypeRef("System.Text.StringBuilder")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DefaultCharacter", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Nullable`1", [$.Char])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_LineSpacing", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Spacing", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.Field({Static:false, Public:false}, "textureValue", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")); 
    $.Field({Static:false, Public:false}, "glyphData", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")])); 
    $.Field({Static:false, Public:false}, "croppingData", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")])); 
    $.Field({Static:false, Public:false}, "characterMap", $asm06.TypeRef("System.Collections.Generic.List`1", [$.Char])); 
    $.Field({Static:false, Public:false}, "kerning", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")])); 
    $.Field({Static:false, Public:false}, "lineSpacing", $.Int32); 
    $.Field({Static:false, Public:false}, "spacing", $.Single); 
    $.Field({Static:false, Public:false}, "defaultCharacter", $asm06.TypeRef("System.Nullable`1", [$.Char])); 
    $.Field({Static:false, Public:false}, "characters", $asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Char])); 
    $.Property({Static:false, Public:true }, "LineSpacing", $.Int32);

    $.Property({Static:false, Public:true }, "Spacing", $.Single);

    $.Property({Static:false, Public:true }, "DefaultCharacter", $asm06.TypeRef("System.Nullable`1", [$.Char]));

    $.Property({Static:false, Public:true }, "Characters", $asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$.Char]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function StringProxy$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.SpriteFont/StringProxy", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Text.StringBuilder")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.Char, [$.Int32], [])
    );

    $.Field({Static:false, Public:false}, "textString", $.String); 
    $.Field({Static:false, Public:false}, "textBuilder", $asm06.TypeRef("System.Text.StringBuilder")); 
    $.Field({Static:false, Public:true , ReadOnly:true }, "Length", $.Int32); 
    $.Property({Static:false, Public:true }, "Item", $.Char);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function SpriteBatch$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsResource"), "Microsoft.Xna.Framework.Graphics.SpriteBatch", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "AllocateBuffers", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Begin", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array") /* AnyType[] */ ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConstructPlatformData", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateIndexData", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Int16]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisposePlatformData", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Color")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm01.TypeRef("Microsoft.Xna.Framework.Color")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawScaleF", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Single, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawRect", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Color")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawRect", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm01.TypeRef("Microsoft.Xna.Framework.Color")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawRect", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), 
          $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")]), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawString", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), $.String, 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawStringBuilder", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), $asm06.TypeRef("System.Text.StringBuilder"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawStringScaleF", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), $.String, 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Single, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawStringBuilderScaleF", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), $asm06.TypeRef("System.Text.StringBuilder"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $.Single, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawString", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), $.String, 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "DrawStringBuilder", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteFont"), $asm06.TypeRef("System.Text.StringBuilder"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $.Single, $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "End", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "Flush", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "InternalDraw", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector4")]), 
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")])]), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Color"), $.Single, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector2")]), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects"), 
          $.Single
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "PlatformRenderBatch", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/SpriteInfo")]), 
          $.Int32, $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "RenderBatch", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/SpriteInfo")]), 
          $.Int32, $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetPlatformRenderState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetRenderState", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "SortSprites", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.Constant({Static:true , Public:false}, "MaxBatchSize", 2048); 
    $.Field({Static:false, Public:false}, "vertexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DynamicVertexBuffer")); 
    $.Field({Static:false, Public:false}, "indexBuffer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DynamicIndexBuffer")); 
    $.Field({Static:false, Public:false}, "outputVertices", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture")])); 
    $.Field({Static:false, Public:false}, "vertexBufferPosition", $.Int32); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "xCornerOffsets", $jsilcore.TypeRef("System.Array", [$.Single])); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "yCornerOffsets", $jsilcore.TypeRef("System.Array", [$.Single])); 
    $.Field({Static:false, Public:false}, "spriteEffect", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "effectMatrixTransform", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "spriteSortMode", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteSortMode")); 
    $.Field({Static:false, Public:false}, "blendState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.BlendState")); 
    $.Field({Static:false, Public:false}, "depthStencilState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthStencilState")); 
    $.Field({Static:false, Public:false}, "rasterizerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RasterizerState")); 
    $.Field({Static:false, Public:false}, "samplerState", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SamplerState")); 
    $.Field({Static:false, Public:false}, "customEffect", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect")); 
    $.Field({Static:false, Public:false}, "transformMatrix", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "inBeginEndPair", $.Boolean); 
    $.Field({Static:false, Public:false}, "spriteQueue", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/SpriteInfo")])); 
    $.Field({Static:false, Public:false}, "spriteQueueCount", $.Int32); 
    $.Field({Static:false, Public:false}, "spriteTextures", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")])); 
    $.Field({Static:false, Public:false}, "sortIndices", $jsilcore.TypeRef("System.Array", [$.Int32])); 
    $.Field({Static:false, Public:false}, "sortedSprites", $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/SpriteInfo")])); 
    $.Field({Static:false, Public:false}, "textureComparer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/TextureComparer")); 
    $.Field({Static:false, Public:false}, "backToFrontComparer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/BackToFrontComparer")); 
    $.Field({Static:false, Public:false}, "frontToBackComparer", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch/FrontToBackComparer")); 
    $.Field({Static:true , Public:false}, "vector2Zero", $asm01.TypeRef("Microsoft.Xna.Framework.Vector2")); 
    $.Field({Static:true , Public:false}, "nullRectangle", $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")])); 
    function SpriteBatch__cctor () {
      $thisType.vector2Zero = new $asm01.Microsoft.Xna.Framework.Vector2();
      $thisType.nullRectangle = new ($asm06.System.Nullable$b1.Of($asm01.Microsoft.Xna.Framework.Rectangle)) ();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      SpriteBatch__cctor
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SpriteInfo$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.SpriteBatch/SpriteInfo", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Source", $asm01.TypeRef("Microsoft.Xna.Framework.Vector4")); 
    $.Field({Static:false, Public:true }, "Destination", $asm01.TypeRef("Microsoft.Xna.Framework.Vector4")); 
    $.Field({Static:false, Public:true }, "Origin", $asm01.TypeRef("Microsoft.Xna.Framework.Vector2")); 
    $.Field({Static:false, Public:true }, "Rotation", $.Single); 
    $.Field({Static:false, Public:true }, "Depth", $.Single); 
    $.Field({Static:false, Public:true }, "Effects", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteEffects")); 
    $.Field({Static:false, Public:true }, "Color", $asm01.TypeRef("Microsoft.Xna.Framework.Color")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function TextureComparer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.SpriteBatch/TextureComparer", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], [])
    );

    $.Field({Static:false, Public:false}, "parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IComparer`1", [$.Int32])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function BackToFrontComparer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.SpriteBatch/BackToFrontComparer", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], [])
    );

    $.Field({Static:false, Public:false}, "parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IComparer`1", [$.Int32])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function FrontToBackComparer$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.SpriteBatch/FrontToBackComparer", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], [])
    );

    $.Field({Static:false, Public:false}, "parent", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SpriteBatch")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IComparer`1", [$.Int32])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DirectionalLight$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DirectionalLight", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), $.Type
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DiffuseColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Direction", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Enabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SpecularColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DiffuseColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Direction", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Enabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SpecularColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.Field({Static:false, Public:false}, "directionParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "diffuseColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "specularColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "enabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "cachedDirection", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "cachedDiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "cachedSpecularColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Property({Static:false, Public:true }, "Enabled", $.Boolean);

    $.Property({Static:false, Public:true }, "Direction", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "DiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "SpecularColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function BasicEffect$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), "Microsoft.Xna.Framework.Graphics.BasicEffect", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheEffectParameters", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EnableDefaultLighting", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Alpha", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AmbientLightColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DiffuseColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight0", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight1", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight2", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EmissiveColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnd", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogStart", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LightingEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreferPerPixelLighting", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Projection", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SpecularColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SpecularPower", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Texture", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TextureEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexColorEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_View", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_World", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Alpha", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_AmbientLightColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DiffuseColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EmissiveColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnd", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogStart", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_LightingEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PreferPerPixelLighting", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Projection", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SpecularColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SpecularPower", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Texture", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_TextureEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_VertexColorEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_View", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_World", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WantParameter", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.Field({Static:false, Public:false}, "textureParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "diffuseColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "emissiveColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "specularColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "specularPowerParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "eyePositionParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogVectorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldInverseTransposeParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldViewProjParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "shaderIndexParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "lightingEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "preferPerPixelLighting", $.Boolean); 
    $.Field({Static:false, Public:false}, "oneLight", $.Boolean); 
    $.Field({Static:false, Public:false}, "fogEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "textureEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "vertexColorEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "world", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "view", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "worldView", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "diffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "emissiveColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "ambientLightColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "alpha", $.Single); 
    $.Field({Static:false, Public:false}, "light0", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "light1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "light2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "fogStart", $.Single); 
    $.Field({Static:false, Public:false}, "fogEnd", $.Single); 
    $.Field({Static:false, Public:false}, "dirtyFlags", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags")); 
    $.Property({Static:false, Public:true , Virtual:true }, "World", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "View", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "Projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true }, "DiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "EmissiveColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "SpecularColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "SpecularPower", $.Single);

    $.Property({Static:false, Public:true }, "Alpha", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "LightingEnabled", $.Boolean);

    $.Property({Static:false, Public:true }, "PreferPerPixelLighting", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "AmbientLightColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight0", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "FogStart", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnd", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "TextureEnabled", $.Boolean);

    $.Property({Static:false, Public:true }, "Texture", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "VertexColorEnabled", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectMatrices"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectLights"), 
      /* 4 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectFog")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DualTextureEffect$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), "Microsoft.Xna.Framework.Graphics.DualTextureEffect", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheEffectParameters", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Alpha", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DiffuseColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnd", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogStart", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Projection", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Texture", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Texture2", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexColorEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_View", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_World", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Alpha", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DiffuseColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnd", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogStart", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Projection", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Texture", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Texture2", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_VertexColorEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_View", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_World", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WantParameter", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.Field({Static:false, Public:false}, "textureParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "texture2Param", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "diffuseColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogVectorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldViewProjParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "shaderIndexParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "vertexColorEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "world", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "view", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "worldView", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "diffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "alpha", $.Single); 
    $.Field({Static:false, Public:false}, "fogStart", $.Single); 
    $.Field({Static:false, Public:false}, "fogEnd", $.Single); 
    $.Field({Static:false, Public:false}, "dirtyFlags", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags")); 
    $.Property({Static:false, Public:true , Virtual:true }, "World", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "View", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "Projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true }, "DiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Alpha", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "FogStart", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnd", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Texture", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "Texture2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "VertexColorEnabled", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectMatrices"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectFog")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function AlphaTestEffect$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), "Microsoft.Xna.Framework.Graphics.AlphaTestEffect", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheEffectParameters", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Alpha", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AlphaFunction", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DiffuseColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnd", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogStart", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Projection", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ReferenceAlpha", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Texture", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexColorEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_View", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_World", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Alpha", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AlphaFunction", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DiffuseColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnd", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogStart", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Projection", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ReferenceAlpha", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Texture", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_VertexColorEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_View", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_World", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WantParameter", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.Field({Static:false, Public:false}, "textureParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "diffuseColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "alphaTestParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogVectorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldViewProjParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "shaderIndexParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "vertexColorEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "world", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "view", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "worldView", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "diffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "alpha", $.Single); 
    $.Field({Static:false, Public:false}, "fogStart", $.Single); 
    $.Field({Static:false, Public:false}, "fogEnd", $.Single); 
    $.Field({Static:false, Public:false}, "alphaFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction")); 
    $.Field({Static:false, Public:false}, "referenceAlpha", $.Int32); 
    $.Field({Static:false, Public:false}, "isEqNe", $.Boolean); 
    $.Field({Static:false, Public:false}, "dirtyFlags", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags")); 
    $.Property({Static:false, Public:true , Virtual:true }, "World", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "View", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "Projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true }, "DiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Alpha", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "FogStart", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnd", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Texture", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "VertexColorEnabled", $.Boolean);

    $.Property({Static:false, Public:true }, "AlphaFunction", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.CompareFunction"));

    $.Property({Static:false, Public:true }, "ReferenceAlpha", $.Int32);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectMatrices"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectFog")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EnvironmentMapEffect$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), "Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheEffectParameters", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EnableDefaultLighting", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Alpha", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AmbientLightColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DiffuseColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight0", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight1", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight2", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EmissiveColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnvironmentMap", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnvironmentMapAmount", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EnvironmentMapSpecular", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnd", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogStart", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FresnelFactor", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Projection", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Texture", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_View", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_World", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IEffectLights.get_LightingEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "get_LightingEnabled");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IEffectLights.set_LightingEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(3, "set_LightingEnabled");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Alpha", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_AmbientLightColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DiffuseColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EmissiveColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnvironmentMap", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnvironmentMapAmount", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EnvironmentMapSpecular", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnd", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogStart", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_FresnelFactor", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Projection", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Texture", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_View", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_World", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WantParameter", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.Field({Static:false, Public:false}, "textureParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "environmentMapParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "environmentMapAmountParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "environmentMapSpecularParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fresnelFactorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "diffuseColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "emissiveColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "eyePositionParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogVectorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldInverseTransposeParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldViewProjParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "shaderIndexParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "oneLight", $.Boolean); 
    $.Field({Static:false, Public:false}, "fogEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "fresnelEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "specularEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "world", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "view", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "worldView", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "diffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "emissiveColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "ambientLightColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "alpha", $.Single); 
    $.Field({Static:false, Public:false}, "light0", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "light1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "light2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "fogStart", $.Single); 
    $.Field({Static:false, Public:false}, "fogEnd", $.Single); 
    $.Field({Static:false, Public:false}, "dirtyFlags", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags")); 
    $.Property({Static:false, Public:true , Virtual:true }, "World", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "View", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "Projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true }, "DiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "EmissiveColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Alpha", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "AmbientLightColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight0", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "FogStart", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnd", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Texture", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "EnvironmentMap", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.TextureCube"));

    $.Property({Static:false, Public:true }, "EnvironmentMapAmount", $.Single);

    $.Property({Static:false, Public:true }, "EnvironmentMapSpecular", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "FresnelFactor", $.Single);

    $.Property({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectMatrices"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectLights"), 
      /* 4 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectFog")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.EffectDirtyFlags", false, {
    All: -1, 
    WorldViewProj: 1, 
    World: 2, 
    EyePosition: 4, 
    MaterialColor: 8, 
    Fog: 16, 
    FogEnable: 32, 
    AlphaTest: 64, 
    ShaderIndex: 128
  }, true
);

(function EffectHelpers$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.EffectHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "EnableDefaultLighting", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetFogVector", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), $.Single, 
          $.Single, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetLightingMatrices", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags"), [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags"), $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetMaterialColor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.Single, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")]), $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")]), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetWorldViewProjAndFog", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags"), [
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags"), $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), $.Boolean, 
          $.Single, $.Single, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")
        ], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function BasicEffectCode$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.BasicEffectCode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:true , Public:false}, "Code", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SkinnedEffectCode$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.SkinnedEffectCode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:true , Public:false}, "Code", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DualTextureEffectCode$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.DualTextureEffectCode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:true , Public:false}, "Code", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function AlphaTestEffectCode$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.AlphaTestEffectCode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:true , Public:false}, "Code", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function EnvironmentMapEffectCode$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.EnvironmentMapEffectCode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:true , Public:false}, "Code", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SpriteEffectCode$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.SpriteEffectCode", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:true , Public:false}, "Code", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function GraphicsContentHelper$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.GraphicsContentHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "GraphicsDeviceFromContentReader", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice"), [$asm01.TypeRef("Microsoft.Xna.Framework.Content.ContentReader")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsProfileCompatible", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexPositionColor$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.VertexPositionColor", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), $asm01.TypeRef("Microsoft.Xna.Framework.Color")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.get_VertexDeclaration", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], [])
    )
      .Overrides(0, "get_VertexDeclaration");

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:true }, "Position", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:false, Public:true }, "Color", $asm01.TypeRef("Microsoft.Xna.Framework.Color"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes"]; }); 
    $.Property({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"));

    $.ImplementInterfaces(
      /* 0 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IVertexType")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexPositionTexture$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.VertexPositionTexture", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), $asm01.TypeRef("Microsoft.Xna.Framework.Vector2")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.get_VertexDeclaration", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], [])
    )
      .Overrides(0, "get_VertexDeclaration");

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:true }, "Position", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:false, Public:true }, "TextureCoordinate", $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes"]; }); 
    $.Property({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"));

    $.ImplementInterfaces(
      /* 0 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IVertexType")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexPositionColorTexture$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), $asm01.TypeRef("Microsoft.Xna.Framework.Color"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.get_VertexDeclaration", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], [])
    )
      .Overrides(0, "get_VertexDeclaration");

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:true }, "Position", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:false, Public:true }, "Color", $asm01.TypeRef("Microsoft.Xna.Framework.Color"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:false, Public:true }, "TextureCoordinate", $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes"]; }); 
    $.Property({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"));

    $.ImplementInterfaces(
      /* 0 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IVertexType")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexPositionNormalTexture$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.VertexPositionNormalTexture", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector2")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.get_VertexDeclaration", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"), [], [])
    )
      .Overrides(0, "get_VertexDeclaration");

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:true }, "Position", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:false, Public:true }, "Normal", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:false, Public:true }, "TextureCoordinate", $asm01.TypeRef("Microsoft.Xna.Framework.Vector2"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields"]; }); 
    $.Field({Static:true , Public:true , ReadOnly:true }, "VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"))
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes"]; }); 
    $.Property({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IVertexType.VertexDeclaration", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexDeclaration"));

    $.ImplementInterfaces(
      /* 0 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IVertexType")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function SkinnedEffect$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), "Microsoft.Xna.Framework.Graphics.SkinnedEffect", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsDevice")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "CacheEffectParameters", 
      new JSIL.MethodSignature(null, [$.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Effect"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "EnableDefaultLighting", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Alpha", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AmbientLightColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DiffuseColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight0", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight1", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_DirectionalLight2", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EmissiveColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogEnd", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_FogStart", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreferPerPixelLighting", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Projection", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SpecularColor", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SpecularPower", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Texture", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_View", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_WeightsPerVertex", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_World", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetBoneTransforms", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")]), [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IEffectLights.get_LightingEnabled", 
      new JSIL.MethodSignature($.Boolean, [], [])
    )
      .Overrides(3, "get_LightingEnabled");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IEffectLights.set_LightingEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    )
      .Overrides(3, "set_LightingEnabled");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnApply", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Alpha", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_AmbientLightColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DiffuseColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_EmissiveColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnabled", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogEnd", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_FogStart", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PreferPerPixelLighting", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Projection", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SpecularColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Vector3")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SpecularPower", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Texture", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_View", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_WeightsPerVertex", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_World", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetBoneTransforms", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Matrix")])], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WantParameter", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")], [])
    );

    $.Constant({Static:true , Public:true }, "MaxBones", 72); 
    $.Field({Static:false, Public:false}, "textureParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "diffuseColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "emissiveColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "specularColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "specularPowerParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "eyePositionParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogColorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "fogVectorParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldInverseTransposeParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "worldViewProjParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "bonesParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "shaderIndexParam", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectParameter")); 
    $.Field({Static:false, Public:false}, "preferPerPixelLighting", $.Boolean); 
    $.Field({Static:false, Public:false}, "oneLight", $.Boolean); 
    $.Field({Static:false, Public:false}, "fogEnabled", $.Boolean); 
    $.Field({Static:false, Public:false}, "world", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "view", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "worldView", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")); 
    $.Field({Static:false, Public:false}, "diffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "emissiveColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "ambientLightColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3")); 
    $.Field({Static:false, Public:false}, "alpha", $.Single); 
    $.Field({Static:false, Public:false}, "light0", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "light1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "light2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight")); 
    $.Field({Static:false, Public:false}, "fogStart", $.Single); 
    $.Field({Static:false, Public:false}, "fogEnd", $.Single); 
    $.Field({Static:false, Public:false}, "weightsPerVertex", $.Int32); 
    $.Field({Static:false, Public:false}, "dirtyFlags", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.EffectDirtyFlags")); 
    $.Property({Static:false, Public:true , Virtual:true }, "World", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "View", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true , Virtual:true }, "Projection", $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"));

    $.Property({Static:false, Public:true }, "DiffuseColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "EmissiveColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "SpecularColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "SpecularPower", $.Single);

    $.Property({Static:false, Public:true }, "Alpha", $.Single);

    $.Property({Static:false, Public:true }, "PreferPerPixelLighting", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "AmbientLightColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight0", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight1", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "DirectionalLight2", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DirectionalLight"));

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnabled", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "FogStart", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogEnd", $.Single);

    $.Property({Static:false, Public:true , Virtual:true }, "FogColor", $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"));

    $.Property({Static:false, Public:true }, "Texture", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Texture2D"));

    $.Property({Static:false, Public:true }, "WeightsPerVertex", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled", $.Boolean);

    $.ImplementInterfaces(
      /* 2 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectMatrices"), 
      /* 3 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectLights"), 
      /* 4 */ $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.IEffectFog")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexElement$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.VertexElement", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat"), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementUsage"), $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Offset", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UsageIndex", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexElementFormat", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VertexElementUsage", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementUsage"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Offset", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_UsageIndex", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_VertexElementFormat", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_VertexElementUsage", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementUsage")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:false}, "_offset", $.Int32); 
    $.Field({Static:false, Public:false}, "_format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat")); 
    $.Field({Static:false, Public:false}, "_usage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementUsage")); 
    $.Field({Static:false, Public:false}, "_usageIndex", $.Int32); 
    $.Property({Static:false, Public:true }, "Offset", $.Int32);

    $.Property({Static:false, Public:true }, "VertexElementFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat"));

    $.Property({Static:false, Public:true }, "VertexElementUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementUsage"));

    $.Property({Static:false, Public:true }, "UsageIndex", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DisplayMode$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DisplayMode", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AspectRatio", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Format", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Height", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TitleSafeArea", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Width", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.Field({Static:false, Public:false}, "_width", $.Int32); 
    $.Field({Static:false, Public:false}, "_height", $.Int32); 
    $.Field({Static:false, Public:false}, "_format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
    $.Property({Static:false, Public:true }, "Format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"));

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.Property({Static:false, Public:true }, "AspectRatio", $.Single);

    $.Property({Static:false, Public:true }, "TitleSafeArea", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DisplayModeCollection$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DisplayModeCollection", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")])], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")]), [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")]), [], [])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.IEnumerator"), [], [])
    )
      .Overrides(1, "GetEnumerator");

    $.Field({Static:false, Public:false}, "_displayModes", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")])); 
    $.Property({Static:false, Public:true }, "Item", $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")]));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DisplayMode")]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function Viewport$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.Viewport", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AspectRatio", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bounds", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Height", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MaxDepth", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MinDepth", 
      new JSIL.MethodSignature($.Single, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TitleSafeArea", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Width", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_X", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Y", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTitleSafeArea", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Project", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Bounds", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.Rectangle")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Height", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MaxDepth", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MinDepth", 
      new JSIL.MethodSignature(null, [$.Single], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Width", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_X", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Y", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Unproject", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.Vector3"), $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), 
          $asm01.TypeRef("Microsoft.Xna.Framework.Matrix"), $asm01.TypeRef("Microsoft.Xna.Framework.Matrix")
        ], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "WithinEpsilon", 
      new JSIL.MethodSignature($.Boolean, [$.Single, $.Single], [])
    );

    $.Field({Static:false, Public:false}, "_x", $.Int32); 
    $.Field({Static:false, Public:false}, "_y", $.Int32); 
    $.Field({Static:false, Public:false}, "_width", $.Int32); 
    $.Field({Static:false, Public:false}, "_height", $.Int32); 
    $.Field({Static:false, Public:false}, "_minZ", $.Single); 
    $.Field({Static:false, Public:false}, "_maxZ", $.Single); 
    $.Property({Static:false, Public:true }, "X", $.Int32);

    $.Property({Static:false, Public:true }, "Y", $.Int32);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    $.Property({Static:false, Public:true }, "MinDepth", $.Single);

    $.Property({Static:false, Public:true }, "MaxDepth", $.Single);

    $.Property({Static:false, Public:true }, "Bounds", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    $.Property({Static:false, Public:true }, "AspectRatio", $.Single);

    $.Property({Static:false, Public:true }, "TitleSafeArea", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Performance", "CA1815:OverrideEqualsAndOperatorEqualsOnValueTypes"]; });

})();

(function ResourceCreatedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.EventArgs"), "Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Resource", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.Field({Static:false, Public:false}, "_resource", $.Object); 
    $.Property({Static:false, Public:true }, "Resource", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function ResourceDestroyedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.EventArgs"), "Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      new JSIL.MethodSignature($.String, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Tag", 
      new JSIL.MethodSignature($.Object, [], [])
    );

    $.Field({Static:false, Public:false}, "_tag", $.Object); 
    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function PresentationParameters$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.PresentationParameters", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Clone", 
      new JSIL.MethodSignature($.Type, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BackBufferFormat", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BackBufferHeight", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BackBufferWidth", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Bounds", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DepthStencilFormat", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DeviceWindowHandle", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayOrientation", 
      new JSIL.MethodSignature($asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsFullScreen", 
      new JSIL.MethodSignature($.Boolean, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MultiSampleCount", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PresentationInterval", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentInterval"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RenderTargetUsage", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"), [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BackBufferFormat", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BackBufferHeight", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_BackBufferWidth", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DepthStencilFormat", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DeviceWindowHandle", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IntPtr")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_DisplayOrientation", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_IsFullScreen", 
      new JSIL.MethodSignature(null, [$.Boolean], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_MultiSampleCount", 
      new JSIL.MethodSignature(null, [$.Int32], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PresentationInterval", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentInterval")], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_RenderTargetUsage", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")], [])
    );

    $.Field({Static:false, Public:false}, "settings", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentationParameters/Settings")); 
    $.Property({Static:false, Public:true }, "BackBufferWidth", $.Int32);

    $.Property({Static:false, Public:true }, "BackBufferHeight", $.Int32);

    $.Property({Static:false, Public:true }, "BackBufferFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat"));

    $.Property({Static:false, Public:true }, "DepthStencilFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat"));

    $.Property({Static:false, Public:true }, "MultiSampleCount", $.Int32);

    $.Property({Static:false, Public:true }, "DisplayOrientation", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation"));

    $.Property({Static:false, Public:true }, "PresentationInterval", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentInterval"));

    $.Property({Static:false, Public:true }, "RenderTargetUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage"));

    $.Property({Static:false, Public:true }, "DeviceWindowHandle", $asm06.TypeRef("System.IntPtr"));

    $.Property({Static:false, Public:true }, "IsFullScreen", $.Boolean);

    $.Property({Static:false, Public:true }, "Bounds", $asm01.TypeRef("Microsoft.Xna.Framework.Rectangle"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Settings$Members () {
  var $, $thisType;
  JSIL.MakeStruct($asm06.TypeRef("System.ValueType"), "Microsoft.Xna.Framework.Graphics.PresentationParameters/Settings", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "BackBufferWidth", $.Int32); 
    $.Field({Static:false, Public:true }, "BackBufferHeight", $.Int32); 
    $.Field({Static:false, Public:true }, "BackBufferFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
    $.Field({Static:false, Public:true }, "DepthStencilFormat", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")); 
    $.Field({Static:false, Public:true }, "MultiSampleCount", $.Int32); 
    $.Field({Static:false, Public:true }, "DisplayOrientation", $asm01.TypeRef("Microsoft.Xna.Framework.DisplayOrientation")); 
    $.Field({Static:false, Public:true }, "PresentationInterval", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.PresentInterval")); 
    $.Field({Static:false, Public:true }, "RenderTargetUsage", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.RenderTargetUsage")); 
    $.Field({Static:false, Public:true }, "DeviceWindowHandle", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "IsFullScreen", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function GraphicsHelpers$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.GraphicsHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AdjustAlphaBlend", 
      new JSIL.MethodSignature($asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetExceptionFromResult", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Exception"), [$.UInt32], [])
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity"]; })
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2208:InstantiateArgumentExceptionsCorrectly"]; })
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; });

    $.ExternalMethod({Static:true , Public:false}, "IsSeparateBlend", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend"), $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.Blend")], [])
    );

    $.ExternalMethod({Static:true , Public:true }, "ThrowExceptionFromResult", 
      new JSIL.MethodSignature(null, [$.UInt32], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DxtDecoder$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.DxtDecoder", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "Decode", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]), [$jsilcore.TypeRef("System.Array", [$.Byte])], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DecodeExplicitAlphaBlock", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]), $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DecodeInterpolatedAlphaBlock", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]), $.Int32
        ], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "DecodeRgbBlock", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]), $.Int32, 
          $.Boolean
        ], [])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PackedDataSize", 
      new JSIL.MethodSignature($.Int32, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Read16", 
      new JSIL.MethodSignature($.UInt16, [$jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Read32", 
      new JSIL.MethodSignature($.UInt32, [$jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Read48", 
      new JSIL.MethodSignature($.UInt64, [$jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32], [])
    );

    $.Constant({Static:true , Public:false}, "EndianOffset0", 0); 
    $.Constant({Static:true , Public:false}, "EndianOffset1", 1); 
    $.Field({Static:false, Public:false}, "width", $.Int32); 
    $.Field({Static:false, Public:false}, "height", $.Int32); 
    $.Field({Static:false, Public:false}, "format", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")); 
    $.Field({Static:false, Public:false}, "colorPalette", $jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")])); 
    $.Field({Static:false, Public:false}, "alphaPalette", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Property({Static:false, Public:true }, "PackedDataSize", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DeviceLostException$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Exception"), "Microsoft.Xna.Framework.Graphics.DeviceLostException", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function DeviceNotResetException$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Exception"), "Microsoft.Xna.Framework.Graphics.DeviceNotResetException", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function NoSuitableGraphicsDeviceException$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Exception"), "Microsoft.Xna.Framework.Graphics.NoSuitableGraphicsDeviceException", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")], [])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function VertexElementValidator$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.Graphics.VertexElementValidator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "GetTypeSize", 
      new JSIL.MethodSignature($.Int32, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat")], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetVertexStride", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Validate", 
      new JSIL.MethodSignature(null, [$.Int32, $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")])], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "Validate", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElement")]), 
          $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.ProfileCapabilities")
        ], [])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.GraphicsProfile", true, {
    Reach: 0, 
    HiDef: 1
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.SurfaceFormat", true, {
    Color: 0, 
    Bgr565: 1, 
    Bgra5551: 2, 
    Bgra4444: 3, 
    Dxt1: 4, 
    Dxt3: 5, 
    Dxt5: 6, 
    NormalizedByte2: 7, 
    NormalizedByte4: 8, 
    Rgba1010102: 9, 
    Rg32: 10, 
    Rgba64: 11, 
    Alpha8: 12, 
    Single: 13, 
    Vector2: 14, 
    Vector4: 15, 
    HalfSingle: 16, 
    HalfVector2: 17, 
    HalfVector4: 18, 
    HdrBlendable: 19
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.DepthFormat", true, {
    None: 0, 
    Depth16: 1, 
    Depth24: 2, 
    Depth24Stencil8: 3
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.GraphicsDeviceStatus", true, {
    Normal: 0, 
    Lost: 1, 
    NotReset: 2
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.PresentInterval", true, {
    Default: 0, 
    One: 1, 
    Two: 2, 
    Immediate: 3
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.ClearOptions", true, {
    Target: 1, 
    DepthBuffer: 2, 
    Stencil: 4
  }, true
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.RenderTargetUsage", true, {
    DiscardContents: 0, 
    PreserveContents: 1, 
    PlatformContents: 2
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.SetDataOptions", true, {
    None: 0, 
    Discard: 1, 
    NoOverwrite: 2
  }, true
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.CubeMapFace", true, {
    PositiveX: 0, 
    NegativeX: 1, 
    PositiveY: 2, 
    NegativeY: 3, 
    PositiveZ: 4, 
    NegativeZ: 5
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.BufferUsage", true, {
    None: 0, 
    WriteOnly: 1
  }, true
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.IndexElementSize", true, {
    SixteenBits: 0, 
    ThirtyTwoBits: 1
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.PrimitiveType", true, {
    TriangleList: 0, 
    TriangleStrip: 1, 
    LineList: 2, 
    LineStrip: 3
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.VertexElementFormat", true, {
    Single: 0, 
    Vector2: 1, 
    Vector3: 2, 
    Vector4: 3, 
    Color: 4, 
    Byte4: 5, 
    Short2: 6, 
    Short4: 7, 
    NormalizedShort2: 8, 
    NormalizedShort4: 9, 
    HalfVector2: 10, 
    HalfVector4: 11
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.VertexElementUsage", true, {
    Position: 0, 
    Color: 1, 
    TextureCoordinate: 2, 
    Normal: 3, 
    Binormal: 4, 
    Tangent: 5, 
    BlendIndices: 6, 
    BlendWeight: 7, 
    Depth: 8, 
    Fog: 9, 
    PointSize: 10, 
    Sample: 11, 
    TessellateFactor: 12
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.TextureFilter", true, {
    Linear: 0, 
    Point: 1, 
    Anisotropic: 2, 
    LinearMipPoint: 3, 
    PointMipLinear: 4, 
    MinLinearMagPointMipLinear: 5, 
    MinLinearMagPointMipPoint: 6, 
    MinPointMagLinearMipLinear: 7, 
    MinPointMagLinearMipPoint: 8
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.EffectParameterClass", true, {
    Scalar: 0, 
    Vector: 1, 
    Matrix: 2, 
    Object: 3, 
    Struct: 4
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.EffectParameterType", true, {
    Void: 0, 
    Bool: 1, 
    Int32: 2, 
    Single: 3, 
    String: 4, 
    Texture: 5, 
    Texture1D: 6, 
    Texture2D: 7, 
    Texture3D: 8, 
    TextureCube: 9
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.BlendFunction", true, {
    Add: 0, 
    Subtract: 1, 
    ReverseSubtract: 2, 
    Min: 3, 
    Max: 4
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.Blend", true, {
    One: 0, 
    Zero: 1, 
    SourceColor: 2, 
    InverseSourceColor: 3, 
    SourceAlpha: 4, 
    InverseSourceAlpha: 5, 
    DestinationColor: 6, 
    InverseDestinationColor: 7, 
    DestinationAlpha: 8, 
    InverseDestinationAlpha: 9, 
    BlendFactor: 10, 
    InverseBlendFactor: 11, 
    SourceAlphaSaturation: 12
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.CompareFunction", true, {
    Always: 0, 
    Never: 1, 
    Less: 2, 
    LessEqual: 3, 
    Equal: 4, 
    GreaterEqual: 5, 
    Greater: 6, 
    NotEqual: 7
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.ColorWriteChannels", true, {
    None: 0, 
    Red: 1, 
    Green: 2, 
    Blue: 4, 
    Alpha: 8, 
    All: 15
  }, true
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.CullMode", true, {
    None: 0, 
    CullClockwiseFace: 1, 
    CullCounterClockwiseFace: 2
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.StencilOperation", true, {
    Keep: 0, 
    Zero: 1, 
    Replace: 2, 
    Increment: 3, 
    Decrement: 4, 
    IncrementSaturation: 5, 
    DecrementSaturation: 6, 
    Invert: 7
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.FillMode", true, {
    Solid: 0, 
    WireFrame: 1
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.TextureAddressMode", true, {
    Wrap: 0, 
    Clamp: 1, 
    Mirror: 2
  }, false
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.SpriteEffects", true, {
    None: 0, 
    FlipHorizontally: 1, 
    FlipVertically: 2
  }, true
);

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.Graphics.SpriteSortMode", true, {
    Deferred: 0, 
    Immediate: 1, 
    Texture: 2, 
    BackToFront: 3, 
    FrontToBack: 4
  }, false
);

(function ProfileCapabilities$Members () {
  var $, $thisType;
  JSIL.MakeClass($asm06.TypeRef("System.Object"), "Microsoft.Xna.Framework.Graphics.ProfileCapabilities", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], [])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetInstance", 
      new JSIL.MethodSignature($.Type, [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowNotSupportedException", 
      new JSIL.MethodSignature(null, [$.String], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowNotSupportedException", 
      new JSIL.MethodSignature(null, [$.String, $.Object], [])
    );

    $.ExternalMethod({Static:false, Public:false}, "ThrowNotSupportedException", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $.Object
        ], [])
    );

    $.Field({Static:false, Public:false}, "Profile", $asm04.TypeRef("Microsoft.Xna.Framework.Graphics.GraphicsProfile")); 
    $.Field({Static:false, Public:false}, "VertexShaderVersion", $.UInt32); 
    $.Field({Static:false, Public:false}, "PixelShaderVersion", $.UInt32); 
    $.Field({Static:false, Public:false}, "OcclusionQuery", $.Boolean); 
    $.Field({Static:false, Public:false}, "GetBackBufferData", $.Boolean); 
    $.Field({Static:false, Public:false}, "SeparateAlphaBlend", $.Boolean); 
    $.Field({Static:false, Public:false}, "DestBlendSrcAlphaSat", $.Boolean); 
    $.Field({Static:false, Public:false}, "MinMaxSrcDestBlend", $.Boolean); 
    $.Field({Static:false, Public:false}, "MaxPrimitiveCount", $.Int32); 
    $.Field({Static:false, Public:false}, "IndexElementSize32", $.Boolean); 
    $.Field({Static:false, Public:false}, "MaxVertexStreams", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxStreamStride", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxVertexBufferSize", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxIndexBufferSize", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxTextureSize", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxCubeSize", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxVolumeExtent", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxTextureAspectRatio", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxSamplers", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxVertexSamplers", $.Int32); 
    $.Field({Static:false, Public:false}, "MaxRenderTargets", $.Int32); 
    $.Field({Static:false, Public:false}, "NonPow2Unconditional", $.Boolean); 
    $.Field({Static:false, Public:false}, "NonPow2Cube", $.Boolean); 
    $.Field({Static:false, Public:false}, "NonPow2Volume", $.Boolean); 
    $.Field({Static:false, Public:false}, "ValidTextureFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])); 
    $.Field({Static:false, Public:false}, "ValidCubeFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])); 
    $.Field({Static:false, Public:false}, "ValidVolumeFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])); 
    $.Field({Static:false, Public:false}, "ValidVertexTextureFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])); 
    $.Field({Static:false, Public:false}, "InvalidFilterFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])); 
    $.Field({Static:false, Public:false}, "InvalidBlendFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.SurfaceFormat")])); 
    $.Field({Static:false, Public:false}, "ValidDepthFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.DepthFormat")])); 
    $.Field({Static:false, Public:false}, "ValidVertexFormats", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Microsoft.Xna.Framework.Graphics.VertexElementFormat")])); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "Reach", $.Type); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "HiDef", $.Type); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

